{"ast":null,"code":"var _jsxFileName = \"/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/form/CheckBox.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckBoxField = ({\n  disabled,\n  className,\n  name,\n  value,\n  onChange,\n  label,\n  color\n}) => {\n  const CheckboxClass = classNames({\n    'checkbox-btn': true,\n    disabled\n  });\n\n  const changeHandler = () => {\n    onChange();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: `${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`,\n    htmlFor: name,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"checkbox-btn__checkbox\",\n      type: \"checkbox\",\n      id: name,\n      name: name,\n      onChange: changeHandler,\n      checked: value,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox-btn__checkbox-custom\",\n      style: color ? {\n        background: color,\n        borderColor: color\n      } : {},\n      children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), className === 'button' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox-btn__label-svg\",\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n        className: \"checkbox-btn__label-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        className: \"checkbox-btn__label-uncheck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkbox-btn__label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CheckBoxField;\nCheckBoxField.propTypes = {\n  onChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]).isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nCheckBoxField.defaultProps = {\n  onChange: () => {},\n  label: '',\n  disabled: false,\n  className: '',\n  color: ''\n};\n\nconst renderCheckBoxField = ({\n  input,\n  label,\n  defaultChecked,\n  disabled,\n  className,\n  color,\n  ...other\n}) => /*#__PURE__*/_jsxDEV(CheckBoxField, {\n  input: input,\n  label: label,\n  defaultChecked: defaultChecked,\n  disabled: disabled,\n  className: className,\n  color: color,\n  ...other\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string\n};\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: ''\n};\nexport default renderCheckBoxField;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBoxField\");","map":{"version":3,"sources":["/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/form/CheckBox.jsx"],"names":["React","PropTypes","classNames","CheckIcon","CloseIcon","CheckBoxField","disabled","className","name","value","onChange","label","color","CheckboxClass","changeHandler","background","borderColor","propTypes","func","string","isRequired","oneOfType","bool","defaultProps","renderCheckBoxField","input","defaultChecked","other","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\n\nconst CheckBoxField = ({\n  disabled, className, name, value, onChange, label, color,\n}) => {\n  const CheckboxClass = classNames({\n    'checkbox-btn': true,\n    disabled,\n  });\n\n  const changeHandler = () => {\n    onChange();\n  };\n\n  return (\n    <label\n      className={`${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`}\n      htmlFor={name}\n    >\n      <input\n        className=\"checkbox-btn__checkbox\"\n        type=\"checkbox\"\n        id={name}\n        name={name}\n        onChange={changeHandler}\n        checked={value}\n        disabled={disabled}\n      />\n      <span\n        className=\"checkbox-btn__checkbox-custom\"\n        style={color ? { background: color, borderColor: color } : {}}\n      >\n        <CheckIcon />\n      </span>\n      {className === 'button'\n        ? (\n          <span className=\"checkbox-btn__label-svg\">\n            <CheckIcon className=\"checkbox-btn__label-check\" />\n            <CloseIcon className=\"checkbox-btn__label-uncheck\" />\n          </span>\n        ) : ''}\n      <span className=\"checkbox-btn__label\">\n        {label}\n      </span>\n    </label>\n  );\n};\n\nCheckBoxField.propTypes = {\n  onChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]).isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nCheckBoxField.defaultProps = {\n  onChange: () => {},\n  label: '',\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nconst renderCheckBoxField = ({\n  input,\n  label,\n  defaultChecked,\n  disabled,\n  className,\n  color,\n  ...other\n}) => (\n  <CheckBoxField\n    input={input}\n    label={label}\n    defaultChecked={defaultChecked}\n    disabled={disabled}\n    className={className}\n    color={color}\n    {...other}\n  />\n);\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nexport default renderCheckBoxField;\n"]},"metadata":{},"sourceType":"module"}