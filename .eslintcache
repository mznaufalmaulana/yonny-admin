[{"/Users/gusnaikhsan/Project/yonny-admin/src/index.js":"1","/Users/gusnaikhsan/Project/yonny-admin/src/serviceWorker.js":"2","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/App.jsx":"3","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/store.js":"4","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/ScrollToTop.jsx":"5","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/Router.jsx":"6","/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/index.js":"7","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/MainWrapper.jsx":"8","/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/ProtectedRoute.jsx":"9","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/index.jsx":"10","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Example/index.jsx":"11","/Users/gusnaikhsan/Project/yonny-admin/src/containers/LogIn/index.jsx":"12","/Users/gusnaikhsan/Project/yonny-admin/src/containers/ExampleTwo/index.jsx":"13","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/index.jsx":"14","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/index.jsx":"15","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/index.jsx":"16","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/index.jsx":"17","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/index.jsx":"18","/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/sidebarReducer.js":"19","/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/themeReducer.js":"20","/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/rtlReducer.js":"21","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/index.jsx":"22","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/index.jsx":"23","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/index.jsx":"24","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Register/index.jsx":"25","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Home/index.jsx":"26","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/index.jsx":"27","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/index.jsx":"28","/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/themeActions.js":"29","/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/sidebarActions.js":"30","/Users/gusnaikhsan/Project/yonny-admin/src/shared/prop-types/ReducerProps.js":"31","/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/rtlActions.js":"32","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/Topbar.jsx":"33","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/Sidebar.jsx":"34","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Example/components/ExampleCard.jsx":"35","/Users/gusnaikhsan/Project/yonny-admin/src/containers/ExampleTwo/components/ExampleCard.jsx":"36","/Users/gusnaikhsan/Project/yonny-admin/src/containers/LogIn/components/LogInForm.jsx":"37","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/add/index.jsx":"38","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/Index.jsx":"39","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/list/index.jsx":"40","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/edit/Index.jsx":"41","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/list/Index.jsx":"42","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/list/Index.jsx":"43","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/edit/Index.jsx":"44","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/add/Index.jsx":"45","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/edit/Index.jsx":"46","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/add/Index.jsx":"47","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/list/Index.jsx":"48","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/add/Index.jsx":"49","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/add/index.jsx":"50","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/list/index.jsx":"51","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/Index.jsx":"52","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/list/Index.jsx":"53","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/list/Index.jsx":"54","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/edit/Index.jsx":"55","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/detail/Index.jsx":"56","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/create/Index.jsx":"57","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/edit/Index.jsx":"58","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/list/Index.jsx":"59","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/add/Index.jsx":"60","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Home/components/ExampleCard.jsx":"61","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/edit/Index.jsx":"62","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Register/components/RegisterForm.jsx":"63","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/list/index.jsx":"64","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/add/Index.jsx":"65","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/edit/Index.jsx":"66","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/add/index.jsx":"67","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/list/Index.jsx":"68","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/InputComponent.jsx":"69","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/SnackbarComponent.jsx":"70","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/SelectComponent.jsx":"71","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/list/modal/delete.jsx":"72","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/list/modal/delete.jsx":"73","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/list/modal/delete.jsx":"74","/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/modal/modalConfirmation.jsx":"75","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/InputFileComponent.jsx":"76","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/MultipleSelectComponent.jsx":"77","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/TextEditorComponent.jsx":"78","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/components/Data.jsx":"79","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/components/Image.jsx":"80","/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/text-editor/TextEditor.jsx":"81","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/list/modal/delete.jsx":"82","/Users/gusnaikhsan/Project/yonny-admin/src/services/index.jsx":"83","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/list/modal/delete.jsx":"84","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/list/modal/delete.jsx":"85","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/list/modal/delete.jsx":"86","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/list/modal/delete.jsx":"87","/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/form/CheckBox.jsx":"88","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/list/modal/delete.jsx":"89","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarProfile.jsx":"90","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarSidebarButton.jsx":"91","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/components/Data.jsx":"92","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/list/modal/delete.jsx":"93","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/components/Image.jsx":"94","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/add/Index.jsx":"95","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/edit/Index.jsx":"96","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/list/Index.jsx":"97","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarContent.jsx":"98","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarMenuLink.jsx":"99","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarCategory.jsx":"100","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarLink.jsx":"101","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/list/modal/delete.jsx":"102"},{"size":497,"mtime":1635955980417,"results":"103","hashOfConfig":"104"},{"size":5301,"mtime":1635955980421,"results":"105","hashOfConfig":"104"},{"size":1321,"mtime":1637058829233,"results":"106","hashOfConfig":"104"},{"size":492,"mtime":1635955980415,"results":"107","hashOfConfig":"104"},{"size":497,"mtime":1635955980415,"results":"108","hashOfConfig":"104"},{"size":2266,"mtime":1641350169397,"results":"109","hashOfConfig":"104"},{"size":190,"mtime":1635955980418,"results":"110","hashOfConfig":"104"},{"size":820,"mtime":1635955980415,"results":"111","hashOfConfig":"104"},{"size":492,"mtime":1638462668151,"results":"112","hashOfConfig":"104"},{"size":1584,"mtime":1635955980416,"results":"113","hashOfConfig":"104"},{"size":395,"mtime":1635955980416,"results":"114","hashOfConfig":"104"},{"size":1519,"mtime":1640103271927,"results":"115","hashOfConfig":"104"},{"size":395,"mtime":1635955980416,"results":"116","hashOfConfig":"104"},{"size":631,"mtime":1640191623476,"results":"117","hashOfConfig":"104"},{"size":616,"mtime":1638462668152,"results":"118","hashOfConfig":"104"},{"size":631,"mtime":1640191572601,"results":"119","hashOfConfig":"104"},{"size":636,"mtime":1638462668159,"results":"120","hashOfConfig":"104"},{"size":643,"mtime":1638462668158,"results":"121","hashOfConfig":"104"},{"size":470,"mtime":1635955980418,"results":"122","hashOfConfig":"104"},{"size":397,"mtime":1637058829238,"results":"123","hashOfConfig":"104"},{"size":387,"mtime":1637058829238,"results":"124","hashOfConfig":"104"},{"size":635,"mtime":1637841533517,"results":"125","hashOfConfig":"104"},{"size":623,"mtime":1640103271933,"results":"126","hashOfConfig":"104"},{"size":638,"mtime":1640192320548,"results":"127","hashOfConfig":"104"},{"size":1037,"mtime":1640941047265,"results":"128","hashOfConfig":"104"},{"size":374,"mtime":1638462668153,"results":"129","hashOfConfig":"104"},{"size":898,"mtime":1640664207140,"results":"130","hashOfConfig":"104"},{"size":625,"mtime":1641350679035,"results":"131","hashOfConfig":"104"},{"size":191,"mtime":1635955980418,"results":"132","hashOfConfig":"104"},{"size":224,"mtime":1635955980418,"results":"133","hashOfConfig":"104"},{"size":288,"mtime":1635955980422,"results":"134","hashOfConfig":"104"},{"size":201,"mtime":1635955980417,"results":"135","hashOfConfig":"104"},{"size":913,"mtime":1635955980416,"results":"136","hashOfConfig":"104"},{"size":1542,"mtime":1637058829235,"results":"137","hashOfConfig":"104"},{"size":417,"mtime":1637058829234,"results":"138","hashOfConfig":"104"},{"size":417,"mtime":1635955980416,"results":"139","hashOfConfig":"104"},{"size":4131,"mtime":1640940218789,"results":"140","hashOfConfig":"104"},{"size":5446,"mtime":1640192942684,"results":"141","hashOfConfig":"104"},{"size":4495,"mtime":1640192934955,"results":"142","hashOfConfig":"104"},{"size":3891,"mtime":1640872407034,"results":"143","hashOfConfig":"104"},{"size":5682,"mtime":1640834993433,"results":"144","hashOfConfig":"104"},{"size":5358,"mtime":1640872295700,"results":"145","hashOfConfig":"104"},{"size":3578,"mtime":1640872445133,"results":"146","hashOfConfig":"104"},{"size":2916,"mtime":1640192824384,"results":"147","hashOfConfig":"104"},{"size":2590,"mtime":1640192831440,"results":"148","hashOfConfig":"104"},{"size":3869,"mtime":1641350224055,"results":"149","hashOfConfig":"104"},{"size":3317,"mtime":1641350197379,"results":"150","hashOfConfig":"104"},{"size":4131,"mtime":1640885022007,"results":"151","hashOfConfig":"104"},{"size":4393,"mtime":1640835212896,"results":"152","hashOfConfig":"104"},{"size":3989,"mtime":1640192998976,"results":"153","hashOfConfig":"104"},{"size":3503,"mtime":1640872394645,"results":"154","hashOfConfig":"104"},{"size":5185,"mtime":1640664224334,"results":"155","hashOfConfig":"104"},{"size":3380,"mtime":1640872125223,"results":"156","hashOfConfig":"104"},{"size":3864,"mtime":1640872651495,"results":"157","hashOfConfig":"104"},{"size":3580,"mtime":1640626011703,"results":"158","hashOfConfig":"104"},{"size":4603,"mtime":1640866791084,"results":"159","hashOfConfig":"104"},{"size":4687,"mtime":1640870376949,"results":"160","hashOfConfig":"104"},{"size":4224,"mtime":1641350169400,"results":"161","hashOfConfig":"104"},{"size":3668,"mtime":1641350169400,"results":"162","hashOfConfig":"104"},{"size":3536,"mtime":1641350169399,"results":"163","hashOfConfig":"104"},{"size":417,"mtime":1638462668153,"results":"164","hashOfConfig":"104"},{"size":4190,"mtime":1640192388358,"results":"165","hashOfConfig":"104"},{"size":5555,"mtime":1641350485812,"results":"166","hashOfConfig":"104"},{"size":3721,"mtime":1640872490202,"results":"167","hashOfConfig":"104"},{"size":4485,"mtime":1640839658697,"results":"168","hashOfConfig":"104"},{"size":6083,"mtime":1640840023286,"results":"169","hashOfConfig":"104"},{"size":3331,"mtime":1640192541854,"results":"170","hashOfConfig":"104"},{"size":3894,"mtime":1640885396175,"results":"171","hashOfConfig":"104"},{"size":687,"mtime":1638462668153,"results":"172","hashOfConfig":"104"},{"size":897,"mtime":1637841533513,"results":"173","hashOfConfig":"104"},{"size":838,"mtime":1637841533512,"results":"174","hashOfConfig":"104"},{"size":989,"mtime":1638462668158,"results":"175","hashOfConfig":"104"},{"size":954,"mtime":1638462668156,"results":"176","hashOfConfig":"104"},{"size":998,"mtime":1638462668152,"results":"177","hashOfConfig":"104"},{"size":942,"mtime":1640838468111,"results":"178","hashOfConfig":"104"},{"size":1103,"mtime":1640103271926,"results":"179","hashOfConfig":"104"},{"size":821,"mtime":1637841533512,"results":"180","hashOfConfig":"104"},{"size":655,"mtime":1637841533513,"results":"181","hashOfConfig":"104"},{"size":3585,"mtime":1640848655656,"results":"182","hashOfConfig":"104"},{"size":6052,"mtime":1640191409924,"results":"183","hashOfConfig":"104"},{"size":1443,"mtime":1640681536902,"results":"184","hashOfConfig":"104"},{"size":954,"mtime":1638462668157,"results":"185","hashOfConfig":"104"},{"size":4921,"mtime":1641350475855,"results":"186","hashOfConfig":"104"},{"size":961,"mtime":1640664207137,"results":"187","hashOfConfig":"104"},{"size":961,"mtime":1640664207139,"results":"188","hashOfConfig":"104"},{"size":993,"mtime":1641350169401,"results":"189","hashOfConfig":"104"},{"size":926,"mtime":1640103271934,"results":"190","hashOfConfig":"104"},{"size":2561,"mtime":1635955980421,"results":"191","hashOfConfig":"104"},{"size":998,"mtime":1637841533516,"results":"192","hashOfConfig":"104"},{"size":1380,"mtime":1638462668154,"results":"193","hashOfConfig":"104"},{"size":810,"mtime":1635955980417,"results":"194","hashOfConfig":"104"},{"size":6390,"mtime":1640829286657,"results":"195","hashOfConfig":"104"},{"size":993,"mtime":1638462668159,"results":"196","hashOfConfig":"104"},{"size":6100,"mtime":1640191409924,"results":"197","hashOfConfig":"104"},{"size":2361,"mtime":1640192763076,"results":"198","hashOfConfig":"104"},{"size":2892,"mtime":1640192758213,"results":"199","hashOfConfig":"104"},{"size":3575,"mtime":1640872473962,"results":"200","hashOfConfig":"104"},{"size":3609,"mtime":1641350169398,"results":"201","hashOfConfig":"104"},{"size":505,"mtime":1635955980417,"results":"202","hashOfConfig":"104"},{"size":1453,"mtime":1637058829235,"results":"203","hashOfConfig":"104"},{"size":959,"mtime":1637058829235,"results":"204","hashOfConfig":"104"},{"size":990,"mtime":1637841533518,"results":"205","hashOfConfig":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"1lhukxk",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"208"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"208"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"208"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"208"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"208"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"208"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"208"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"208"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"208"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"208"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"208"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"208"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"315","usedDeprecatedRules":"208"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"208"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"208"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"208"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"208"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"208"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"208"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"208"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"339","usedDeprecatedRules":"208"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"208"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"208"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"208"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"208"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"208"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"208"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"208"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"208"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"372","usedDeprecatedRules":"208"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"208"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"208"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"208"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"208"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"208"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"208"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"208"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"208"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"208"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"208"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"208"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"/Users/gusnaikhsan/Project/yonny-admin/src/index.js",[],["452","453"],"/Users/gusnaikhsan/Project/yonny-admin/src/serviceWorker.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/App.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/store.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/ScrollToTop.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/Router.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/index.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/MainWrapper.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/App/ProtectedRoute.jsx",["454","455"],"import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Col, Row } from \"reactstrap\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (localStorage.getItem(\"token\")) {\n          const page = <Component {...props} />;\n          return page;\n        } else {\n          return <Redirect to=\"/log_in\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Example/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/LogIn/index.jsx",["456","457","458"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FacebookIcon from \"mdi-react/FacebookIcon\";\nimport GooglePlusIcon from \"mdi-react/GooglePlusIcon\";\nimport LogInForm from \"./components/LogInForm\";\n\nconst LogIn = () => (\n  <div className=\"account\">\n    <div className=\"account__wrapper\">\n      <div className=\"account__card\">\n        <div className=\"account__head\">\n          <h3 className=\"account__title\">\n            Welcome to\n            <span className=\"account__logo\">\n              {\" \"}\n              BATU\n              <span className=\"account__logo-accent\">YONNY</span>\n            </span>\n          </h3>\n          <h4 className=\"account__subhead subhead\">\n            Start your business easily\n          </h4>\n        </div>\n        <LogInForm onSubmit />\n        {/* <div className=\"account__or\">\n          <p>Or Easily Using</p>\n        </div>\n        <div className=\"account__social\">\n          <Link\n            className=\"account__social-btn account__social-btn--facebook\"\n            to=\"/pages/one\"\n          >\n            <FacebookIcon />\n          </Link>\n          <Link\n            className=\"account__social-btn account__social-btn--google\"\n            to=\"/pages/one\"\n          >\n            <GooglePlusIcon />\n          </Link>\n        </div> */}\n      </div>\n    </div>\n  </div>\n);\n\nexport default LogIn;\n\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\n// four lines in /scss/components/form.scss to add styles\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/ExampleTwo/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/sidebarReducer.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/themeReducer.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/reducers/rtlReducer.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Register/index.jsx",["459","460","461"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FacebookIcon from \"mdi-react/FacebookIcon\";\nimport GooglePlusIcon from \"mdi-react/GooglePlusIcon\";\nimport RegisterForm from \"./components/RegisterForm\";\n\nconst Register = () => (\n  <div className=\"account\">\n    <div className=\"account__wrapper\">\n      <div className=\"account__card\">\n        <div className=\"account__head\">\n          <h3 className=\"account__title\">\n            Welcome to\n            <span className=\"account__logo\">\n              {\" \"}\n              Batu\n              <span className=\"account__logo-accent\">Yonny</span>\n            </span>\n          </h3>\n          <h4 className=\"account__subhead subhead\">\n            Start your business easily\n          </h4>\n        </div>\n        <RegisterForm onSubmit />        \n      </div>\n    </div>\n  </div>\n);\n\nexport default Register;\n\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\n// four lines in /scss/components/form.scss to add styles\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Home/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/themeActions.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/sidebarActions.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/shared/prop-types/ReducerProps.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/redux/actions/rtlActions.js",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/Topbar.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/Sidebar.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Example/components/ExampleCard.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/ExampleTwo/components/ExampleCard.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/LogIn/components/LogInForm.jsx",["462","463","464"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport EyeIcon from \"mdi-react/EyeIcon\";\nimport KeyVariantIcon from \"mdi-react/KeyVariantIcon\";\nimport AccountOutlineIcon from \"mdi-react/AccountOutlineIcon\";\nimport renderCheckBoxField from \"../../../shared/components/form/CheckBox\";\nimport API from \"../../../services\";\nimport { Button } from \"reactstrap\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nconst LogInForm = ({ handleSubmit }) => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [error, setError] = useState({ email: \"\", password: \"\" });\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  useEffect(() => {\n    localStorage.clear();\n  });\n\n  const showPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const make = () => {\n    let payload = JSON.stringify({\n      email: email,\n      password: pass,\n    });\n    login(payload);\n  };\n\n  const login = (payload) => {\n    API.post(`login`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      localStorage.setItem(\"token\", result.token);\n      window.window.location.href = \"/home\";\n    } else if (result.status === 500) {\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    } else {\n      setError({\n        ...error,\n        email: result.data.email,\n        password: result.data.password,\n      });\n    }\n  };\n\n  return (\n    <>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Email</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <AccountOutlineIcon />\n            </div>\n            <Field\n              name=\"name\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <span className=\"text-danger\">{error.email}</span>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Password</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <KeyVariantIcon />\n            </div>\n            <Field\n              name=\"password\"\n              component=\"input\"\n              type={isPasswordShown ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              onChange={(e) => setPass(e.target.value)}\n            />\n            <button\n              className={`form__form-group-button${\n                isPasswordShown ? \" active\" : \"\"\n              }`}\n              onClick={() => showPassword()}\n              type=\"button\"\n            >\n              <EyeIcon />\n            </button>\n          </div>\n          <span className=\"text-danger\">{error.password}</span>\n          {/* <div className=\"account__forgot-password\">\n            <a href=\"/\">Forgot a password?</a>\n          </div> */}\n        </div>\n        <br />\n        <Button\n          className=\"btn btn-primary account__btn account__btn--small text-white\"\n          onClick={make}\n        >\n          Sign In\n        </Button>\n        <Link\n          className=\"btn btn-outline-primary account__btn account__btn--small\"\n          to=\"/register\"\n        >\n          Create Account\n        </Link>\n      </form>\n    </>\n  );\n};\n\nLogInForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: \"log_in_form\",\n})(LogInForm);\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/add/index.jsx",["465"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport MultipleSelectComponent from \"../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../Layout/components/TextEditorComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: `${\n              item.category_parent ? item.category_parent + \" - \" : \"\"\n            }${item.category_name}`,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = new FormData();\n    let cat = [];\n    let file = [];\n    category.map((item) => cat.push(item.value));\n    payload.append(\"product_type_id\", type);\n    payload.append(\"product_name\", productName);\n    payload.append(\"description\", desc);\n    payload.append(\"product_category_id[]\", cat);\n    payload.append(\"product_photo[]\", \"\");\n    payload.append(\"is_active\", 1);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`product/store`, payload, \"POST\");\n    uploadImage(resp.data.product_id);\n  };\n\n  const uploadImage = async (id) => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i]);\n        resp = await API.uploadFile(\n          `product/${id}/store-product-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Product</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Product Name\"\n              type=\"text\"\n              placeholder=\"Input the Category Name\"\n              onChangeValue={(val) => setProductName(val)}\n            />\n\n            <TextEditorComponent\n              label=\"Description\"\n              onChangeValue={(val) => setDesc(val)}\n            />\n\n            <SelectComponent\n              label=\"Type\"\n              placeholder={\"Select Type of Product\"}\n              data={listType}\n              onChangeValue={(val) => setType(val)}\n            />\n\n            <MultipleSelectComponent\n              label=\"Category Product\"\n              data={listCategory}\n              onChangeValue={(val) => setCategory(val)}\n            />\n\n            <InputFileComponent\n              label=\"Photo Product\"\n              onChangeValue={(val) => setFiles(val)}\n              caption=\"Choose Max. 5 Files\"\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/Index.jsx",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Spinner,\n  TabContent,\n  TabPane,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\nimport FormData from \"../../../containers/Product/edit/components/Data\";\nimport ImageData from \"../../../containers/Product/edit/components/Image\";\nimport classnames from \"classnames\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const animatedComponents = makeAnimated();\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.category_name,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n    API.get(`product/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n    console.log(data);\n  }, []);\n\n  const makePayload = () => {\n    let cat = [];\n    category.map((item) => cat.push(item.value));\n    let payload = JSON.stringify({\n      product_type_id: data.type_id,\n      product_name: data.product_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      product_category_id: cat,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.put(`product/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Product</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <div className=\"tabs\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"1\" })}\n                  onClick={() => toggle(\"1\")}\n                >\n                  Data\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"2\" })}\n                  onClick={() => toggle(\"2\")}\n                >\n                  Media\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <FormData />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ImageData />\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/list/index.jsx",["481"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProduct = () => {\n    API.deleteData(`product/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.project_name} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Product Name\",\n      cell: (row) => row.product_name,\n    },\n    {\n      name: \"Type\",\n      cell: (row) => row.type_name,\n    },\n    {\n      name: \"Category Product\",\n      cell: (row) =>\n        row.product_category.map((item) => (\n          <span className=\"badge badge-pill badge-warning p-2 mr-1\">\n            {item.category_name}\n          </span>\n        )),\n    },\n    {\n      name: \"Seen Count\",\n      cell: (row) => row.seen_count,\n    },\n    {\n      name: \"Share Count\",\n      cell: (row) => row.share_count,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/product/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProduct}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Data Product</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/product/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Loading Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/edit/Index.jsx",["482"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [firstAddress, setFirstAddress] = useState(\"\");\n  const [secondAddress, setSecondAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [onFooter, setOnFooter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [listRegion, setListRegion] = useState([]);\n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.region,\n          })\n        );\n        setListRegion(list);\n      }\n    });    \n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      region_id: region,\n      first_address: firstAddress,\n      second_address: secondAddress,\n      phone: phone,\n      email: email,\n      is_on_footer: onFooter,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.post(`contact/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`contact/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setRegion(result.data[0].region_id);\n        setFirstAddress(result.data[0].first_address);\n        setSecondAddress(result.data[0].second_address);\n        setEmail(result.data[0].email);\n        setPhone(result.data[0].phone);\n        setOnFooter(result.data[0].is_on_footer);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Contact</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"select\"\n                  type=\"select\"\n                  value={region}\n                  onChange={(e) => setRegion(e.target.value)}\n                >\n                  <option value={0}>Select</option>\n                  {listRegion.map((item) => (\n                    <option value={item.value}>{item.label}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>First Address</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Address\"\n                  type=\"textarea\"\n                  value={firstAddress}\n                  onChange={(e) => setFirstAddress(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Second Address</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Address\"\n                  type=\"textarea\"\n                  value={secondAddress}\n                  onChange={(e) => setSecondAddress(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Phone</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Phone\"\n                  type=\"text\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Email</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/list/Index.jsx",["483","484"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport ModalConfirmation from \"../../../shared/components/modal/modalConfirmation\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [onHeaderFooter, seOnHeaderFooter] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`contact/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `Contact ${deleteData.data.region} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false, data: \"\", status: \"error\" });\n      }\n    });\n  };\n\n  const changeHeaderFooter = () => {\n    API.post(`contact/${onHeaderFooter.data}/update-on-footer`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `Contact was saved`,\n          status: \"success\",\n        });\n        seOnHeaderFooter({ open: false, data: \"\", status: \"error\" });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`contact/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Region\",\n      cell: (row) => row.region,\n    },\n    {\n      name: \"First Address\",\n      cell: (row) => row.first_address,\n    },\n    {\n      name: \"Second Address\",\n      cell: (row) => row.second_address,\n    },\n    {\n      name: \"Phone\",\n      cell: (row) => row.phone,\n    },\n    {\n      name: \"Email\",\n      cell: (row) => row.email,\n    },\n    {\n      name: \"On Header Footer\",\n      cell: (row) => row.is_on_footer? (\n        <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n          Yes\n        </span>\n        ):(\n        <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n          No\n        </span>\n        ),\n    },\n    {\n      name: \"\",\n      width: \"250px\",\n      cell: (row) => (\n        <>        \n         <a\n            href=\"#\"\n            className=\"btn-sm btn-info mr-1\"\n            onClick={() => seOnHeaderFooter({ open: true, title: `Change this data`, question: 'Are You sure change this data ?', data: row.id })}\n          >\n            Header Footer\n          </a>\n\n          <NavLink\n            to={`/contact/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>          \n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalConfirmation\n          open={onHeaderFooter.open}\n          data={onHeaderFooter.data}\n          title={onHeaderFooter.title}          \n          question={onHeaderFooter.question}        \n          onHide={() => seOnHeaderFooter({ ...onHeaderFooter, open: false })}\n          onAccept={() => changeHeaderFooter()}\n        />\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data Contact</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/contact/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Loading Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/list/Index.jsx",["485"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`region/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.region} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false, data: \"\", status: \"error\" });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Region Name\",\n      cell: (row) => row.region,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/region/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data Region</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/region/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Loading Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/edit/Index.jsx",["486","487","488"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  const save = async () => {\n    let payload = JSON.stringify({ region: region });\n    setIsLoading(true);\n    await API.put(`region/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`region/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setRegion(result.data[0].region);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Region</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"region_name\"\n                  placeholder=\"Input the Region Name\"\n                  type=\"text\"\n                  value={region}\n                  onChange={(e) => setRegion(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/add/Index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/edit/Index.jsx",["489"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const optionIcon = [\n    { value: 'faFacebook', label:  'Facebook'},\n    { value: 'faInstagram', label: 'Instagram' },\n    { value: 'faTwitter', label: 'Twitter' },\n  ];\n  const { id } = useParams();\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      icon: data.icon,\n      link: data.link,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.put(`social-media/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`social-media/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Social Media</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Icon Social Media</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"select\"\n                  type=\"select\"\n                  value={data?.icon}\n                  onChange={(e) => setData({ ...data, icon: e.target.value })}\n                >\n                  <option value={-1} disabled>\n                    Select Icon\n                  </option>\n                  {optionIcon.map((item) => (\n                    <option value={item.value}>{item.label}</option>\n                  ))}                                     \n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Link Social Media</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Link\"\n                  type=\"text\"\n                  value={data?.link}\n                  onChange={(e) => setData({ ...data, link: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/add/Index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/list/Index.jsx",["490","491"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook, faInstagram, faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`social-media/${deleteData.data.id}/delete`).then(\n      (result) => {\n        if (result.message === \"success\") {\n          setAlert({\n            open: true,\n            message: `${deleteData.data.link} was deleted`,\n            status: \"success\",\n          });\n          setDeleteData({ open: false, data: \"\", status: \"error\" });\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`social-media/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },    \n    {\n      name: \"Icon\",\n      cell: (row) => row.icon==='faFacebook'?\n          (<FontAwesomeIcon icon={faFacebook}/>):\n        row.icon==='faInstagram'?\n          (<FontAwesomeIcon icon={faInstagram}/>):\n        row.icon==='faTwitter'?\n          (<FontAwesomeIcon icon={faTwitter}/>):null,\n    },\n    {\n      name: \"Link\",\n      cell: (row) => (<a href={row.link} target=\"_blank\">{row.link}</a>),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/social-media/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data Social Media</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/social-media/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Loading Data</p>                  \n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/add/Index.jsx",["492","493","494","495","496"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport Toggle from \"react-toggle\";\nrequire(\"react-toggle/style.css\");\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [firstAddress, setFirstAddress] = useState(\"\");\n  const [secondAddress, setSecondAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [onFooter, setOnFooter] = useState(0);\n  const [listRegion, setListRegion] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  useEffect(() => {\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.region,\n          })\n        );\n        setListRegion(list);\n      }\n    });\n    console.log(listRegion);\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      region_id: region,\n      first_address: firstAddress,\n      second_address: secondAddress,\n      phone: phone,\n      email: email,\n      is_on_footer: onFooter,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.post(`contact/store`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Contact</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <SelectComponent\n              label=\"Region\"\n              placeholder={\"Select\"}\n              data={listRegion}\n              onChangeValue={(val) => setRegion(val)}\n            />\n            <InputComponent\n              label=\"First Address\"\n              type=\"textarea\"\n              placeholder=\"Input the First Address\"\n              onChangeValue={(val) => setFirstAddress(val)}\n            />\n            <InputComponent\n              label=\"Second Address\"\n              type=\"textarea\"\n              placeholder=\"Input the Second Address\"\n              onChangeValue={(val) => setSecondAddress(val)}\n            />\n            <InputComponent\n              label=\"Phone\"\n              type=\"text\"\n              placeholder=\"Input the Phone\"\n              onChangeValue={(val) => setPhone(val)}\n            />\n            <InputComponent\n              label=\"Email\"\n              type=\"email\"\n              placeholder=\"Input the Email\"\n              onChangeValue={(val) => setEmail(val)}\n            />          \n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/add/index.jsx",["497","498","499","500","501"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport MultipleSelectComponent from \"../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../Layout/components/TextEditorComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport axios from \"axios\";\nimport FileBase64 from \"react-file-base64\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const makePayload = () => {\n    let payload = new FormData();\n    payload.append(\"project_name\", projectName);\n    payload.append(\"description\", desc);\n    payload.append(\"project_photo[]\", \"\");\n    payload.append(\"is_active\", 1);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`project/store`, payload, \"POST\");\n    uploadImage(resp.data.project_id);\n  };\n\n  const uploadImage = async (id) => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i]);\n        resp = await API.uploadFile(\n          `project/${id}/store-project-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Project</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Project Name\"\n              type=\"text\"\n              placeholder=\"Input the Project Name\"\n              onChangeValue={(val) => setProjectName(val)}\n            />\n\n            <TextEditorComponent\n              label=\"Description\"\n              onChangeValue={(val) => setDesc(val)}\n            />\n\n            <InputFileComponent\n              label=\"Photo Project\"\n              onChangeValue={(val) => setFiles(val)}\n              caption=\"Choose Max. 3 Files\"\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/list/index.jsx",["502"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`project/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`project/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.project_name} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Project Name\",\n      cell: (row) => row.project_name,\n    },\n    {\n      name: \"Share Count\",\n      cell: (row) => row.share_count,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/project/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Data Project</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/project/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Loading Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/Index.jsx",["503","504","505","506","507","508","509","510","511","512","513","514"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Spinner,\n  TabContent,\n  TabPane,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\nimport FormData from \"../../../containers/Project/edit/components/Data\";\nimport ImageData from \"../../../containers/Project/edit/components/Image\";\nimport classnames from \"classnames\";\n\nrequire(\"../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  useEffect(() => {\n    API.get(`project/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n    API.get(`project/${id}/project-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        result.data.map((item) =>\n          photo.push({\n            id: item.id,\n            photo_name: `${API.urlStorage}${item.photo_name}`,\n          })\n        );\n        setDataFile(photo);\n      }\n      console.log(dataFile);\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      project_name: data.project_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.put(`project/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n\n    console.log(files);\n  };\n\n  const uploadImage = async () => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i].photo_name);\n        resp = await API.uploadFile(\n          `project/${files[i].id}/update-project-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Project</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <div className=\"tabs\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"1\" })}\n                  onClick={() => toggle(\"1\")}\n                >\n                  Data\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"2\" })}\n                  onClick={() => toggle(\"2\")}\n                >\n                  Media\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <FormData />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ImageData />\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/list/Index.jsx",["515","516"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`email/message`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`email/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.email_address} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Name\",\n      cell: (row) => row.name,\n    },\n    {\n      name: \"Email Address\",\n      cell: (row) => row.email_address,\n    },\n    {\n      name: \"With Product\",\n      cell: (row) => row.product_id? (\n        <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n          Yes\n        </span>\n      ):(\n        <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n          No\n        </span>\n      ),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <a\n            href={`/email/chat/detail/${row.id}`}\n            className=\"btn-sm btn-success mr-1\"\n          >\n            Reply\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Data Email Message</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Loading Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>              \n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/list/Index.jsx",["517"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`email/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`email/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.email_address} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Email Address\",\n      cell: (row) => row.email_address,\n    },\n    {\n      name: \"Type\",\n      cell: (row) =>\n        row.is_subscribe ? (\n          <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n            Subscriber\n          </span>\n        ) : (\n          <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n            Non Subscriber\n          </span>\n        ),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          {/* <NavLink\n            to={`/email/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink> */}\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Data Email</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/email/create\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  <span className=\"sidebar__link-icon lnr lnr-bullhorn text-white\" />{\" \"}\n                  Broadcast\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Loading Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/edit/Index.jsx",["518"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index(){\n\n\tconst [emailAddress, setEmailAddress] = useState(\"\");\n  const [isSubscribe, setIsSubscribe] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);  \n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const { id } = useParams();\n\n\tuseEffect(() => {\n    API.get(`email/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setEmailAddress(result.data[0].email_address);    \n        setIsSubscribe(result.data[0].is_subscribe);\t\t\t\t\n      }\n    });\n  }, []);\n\n\tconst makePayload = () => {\n    let payload = JSON.stringify({\n      email_address: emailAddress,\n\t\t\tis_subscribe: isSubscribe\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n\tconst save = async (payload) => {\n    await API.put(`email/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n\tconst handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Saved\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n\tconst Index = (\n\t\t<Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Email</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">           \n            <FormGroup row>\n              <Label sm={2}>Enail Address</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Email Address\"\n                  type=\"email\"\n                  value={emailAddress}\n                  onChange={(e) => setEmailAddress(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Subscribe</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Subscribe\"\n                  type=\"number\"\n                  value={isSubscribe}\n                  onChange={(e) => setIsSubscribe(e.target.value)}\n                />\n              </Col>\n            </FormGroup>           \n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n\t);\n\n\treturn Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/detail/Index.jsx",["519","520","521","522","523"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport TextEditorComponent from \"../../../Layout/components/TextEditorComponent\";\n\nfunction Index() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [data, setData] = useState({\n    emailAddress: \"\",\n    message: \"\",\n    product_id: \"\",\n    photo_name: \"\",\n  });\n  const [message, setMessage] = useState(\"\");\n  const [messageReply, setMessageReply] = useState(\"\");\n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`email/message/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setEmailAddress(result.data[0].email_address);\n        setMessage(result.data[0].message);\n        setData({\n          emailAddress: result.data[0].email_address,\n          message: result.data[0].message,\n          product_id: result.data[0].product_id,\n          photo_name: result.data[0].photo_name,\n        });\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      email_id: id,\n      message: messageReply,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.post(`email/send`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Email was Sent\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Reply Email</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>From</Label>\n              <Col sm={10}>\n                <p>{data.emailAddress}</p>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Message</Label>\n              <Col sm={10}>\n                <p>{data.message}</p>\n              </Col>\n            </FormGroup>\n            {data.product_id ? (\n              <>\n                <FormGroup row>\n                  <Label sm={2}>Link Product</Label>\n                  <Col sm={10}>\n                    <a\n                      href={`${API.urlStore}product/detail?product=${data.product_id}`}\n                      target=\"_blank\"\n                    >{`${API.urlStore}product/detail?product=${data.product_id}`}</a>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label sm={2}>Photo Product</Label>\n                  <Col sm={10}>\n                    <img\n                      className=\"w-50 mb-2\"\n                      src={`${API.urlStorage}/${data.photo_name}`}\n                      alt=\"\"\n                    />\n                  </Col>\n                </FormGroup>\n              </>\n            ) : null}\n            <TextEditorComponent\n              label=\"Reply\"\n              onChangeValue={(val) => setMessageReply(val)}\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Send\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/create/Index.jsx",["524"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport SelectComponent from \"../../../Layout/components/SelectComponent\";\nimport MultipleSelectComponent from \"../../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../../Layout/components/TextEditorComponent\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [listEmail, setListEmail] = useState(\"\");\n  const [emails, setEmails] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [isPromo, setIsPromo] = useState(\"\");\n  const [promoId, setPromoId] = useState(\"\");\n  const [listPromo, setListPromo] = useState([]);\n  const type = [\n    { value: 1, label: \"Broadcast Promo\" },\n    { value: 2, label: \"Broadcast Message\" },\n  ];\n\n  useEffect(() => {\n    API.get(`email/list/subscriber`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.email_address,\n          })\n        );\n        setListEmail(list);\n      }\n    });\n    API.get(`promo/list/all`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.name,\n          })\n        );\n        setListPromo(list);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let email_id_list = [];\n    emails.map((item) => email_id_list.push(item.value));\n    let payload = JSON.stringify({\n      promo_id: isPromo === \"2\" ? \"\" : promoId,\n      is_promo: isPromo === \"1\" ? 1 : 0,\n      broadcast_message: isPromo === \"2\" ? desc : \"\",\n      email_id_list: email_id_list,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.post(`email/broadcast`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Email was Sent\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Broadcast Email</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <MultipleSelectComponent\n              label=\"To\"\n              data={listEmail}\n              onChangeValue={(val) => setEmails(val)}\n            />\n\n            <SelectComponent\n              label=\"Type\"\n              placeholder=\"Select Type\"\n              data={type}\n              onChangeValue={(val) => setIsPromo(val)}\n            />\n\n            {isPromo === \"2\" && (\n              <TextEditorComponent\n                label=\"Message\"\n                onChangeValue={(val) => setDesc(val)}\n              />\n            )}\n\n            {isPromo === \"1\" && (\n              <SelectComponent\n                label=\"Promo\"\n                placeholder=\"Select Promo\"\n                data={listPromo}\n                onChangeValue={(val) => setPromoId(val)}\n              />\n            )}\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Send\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/edit/Index.jsx",["525"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index(props) {\n  const [data, setData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [pass, setPass] = useState(\"\");\n  const [repeatPass, setRepeatPass] = useState(\"\");\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const { id } = useParams();\n\n  function save() {\n    let payload = JSON.stringify({\n      email: data.email,\n      password: pass,\n      password_confirmation: repeatPass,\n    });\n    setIsLoading(true);\n    API.put(`user/${id}/update`, payload).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert({ open: true, message: \"Data Saved\", status: \"success\" });\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert({\n          open: true,\n          message: result.data.password ? result.data.password : result.message,\n          status: \"error\",\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    API.get(`user/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data User</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Username</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Username\"\n                  type=\"text\"\n                  value={data.username}\n                  onChange={(e) =>\n                    setData({ ...data, username: e.target.value })\n                  }\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Email</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Email\"\n                  type=\"text\"\n                  value={data.email}\n                  onChange={(e) => setData({ ...data, email: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Password</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Password\"\n                  type=\"password\"\n                  value={pass}\n                  onChange={(e) => setPass(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Repeat Password</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Repeat Password\"\n                  type=\"password\"\n                  value={repeatPass}\n                  onChange={(e) => setRepeatPass(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/list/Index.jsx",["526"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`social-media/${deleteData.data.id}/delete`).then(\n      (result) => {\n        if (result.message === \"success\") {\n          setAlert({\n            open: true,\n            message: `${deleteData.data.link} was deleted`,\n            status: \"success\",\n          });\n          setDeleteData({ open: false, data: \"\", status: \"error\" });\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`user/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Username\",\n      cell: (row) => row.username,\n    },\n    {\n      name: \"Email\",\n      cell: (row) => row.email,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/user/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data User</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/user/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/add/Index.jsx",["527"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index(props) {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [repeatPass, setRepeatPass] = useState(\"\");\n  const [valid, setValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  useEffect(() => {\n    if (pass === repeatPass) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [pass, repeatPass]);\n\n  function save() {\n    let body = JSON.stringify({\n      username: username,\n      email: email,\n      password: pass,\n      password_confirmation: repeatPass,\n    });\n    setIsLoading(true);\n    API.post(`user/store`, body).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert({ open: true, message: \"Data Saved\", status: \"success\" });\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert({\n          open: true,\n          message: result.data.password ? result.data.password : result.message,\n          status: \"error\",\n        });\n      }\n    });\n  }\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data User</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Username\"\n              type=\"text\"\n              placeholder=\"Input the Username\"\n              onChangeValue={(val) => setUsername(val)}\n            />\n\n            <InputComponent\n              label=\"Email\"\n              type=\"email\"\n              placeholder=\"Input the Email\"\n              onChangeValue={(val) => setEmail(val)}\n            />\n\n            <InputComponent\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Input the Password\"\n              onChangeValue={(val) => setPass(val)}\n            />\n\n            <InputComponent\n              label=\"Repeat Password\"\n              type=\"password\"\n              placeholder=\"Repeat Password\"\n              onChangeValue={(val) => setRepeatPass(val)}\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Home/components/ExampleCard.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/edit/Index.jsx",["528","529","530","531","532"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Edit(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [listParent, setListParent] = useState([]);\n  const [categoryParent, setCategoryParent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  function onChangeCategoryParent(val) {\n    setCategoryParent(val);\n  }\n\n  function onChangeCategory(val) {\n    setCategory(val);\n  }\n\n  function save() {\n    let payload = JSON.stringify({\n      category_name: category,\n      category_parent: categoryParent,\n    });\n    setIsLoading(true);\n    API.put(`product-category/${id}/update`, payload).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(\"Data Saved\");\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(result.message);\n      }\n    });\n  }\n\n  useEffect(() => {\n    API.get(`product-category/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setCategory(result.data[0].category_name);\n        setCategoryParent(result.data[0].category_parent);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    API.get(`product-category/list-parent`).then((result) => {\n      if (result.message === \"success\") {\n        setListParent(result.data);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Category</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <SnackbarComponent\n            openAlert={alert}\n            message={message}\n            onHide={() => setAlert(false)}\n          />\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Category Parent</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"category_parent\"\n                  type=\"select\"\n                  value={categoryParent}\n                  onChange={(e) => {\n                    setCategoryParent(e.target.value);\n                  }}\n                >\n                  <option value={0}>Nothing Parent Category</option>\n                  {listParent.map((data) => (\n                    <option value={data.id}>{data.category_name}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Category Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"category_name\"\n                  placeholder=\"Input the Category Name\"\n                  type=\"text\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Edit;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Register/components/RegisterForm.jsx",["533","534","535","536"],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/list/index.jsx",["537","538"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [dataModal, setDataModal] = useState(\"\");\n  const [openModalDelete, setOpenModalDelete] = useState(\n    dataModal ? true : false\n  );\n\n  const deleteCategory = () => {\n    API.deleteData(`product-category/${dataModal.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert(true);\n        setMessage(`${dataModal.category_name} was deleted`);\n        setOpenModalDelete(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Category Product Name\",\n      cell: (row) => row.category_name,\n    },\n    {\n      name: \"Parent Category\",\n      cell: (row) => (row.category_parent ? row.category_parent : \"-\"),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/product/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => (setOpenModalDelete(true), setDataModal(row))}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={openModalDelete}\n          data={dataModal}\n          onHide={() => setOpenModalDelete(false)}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert}\n          message={message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data Category</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/product/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              // paginationServer\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Loading Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/add/Index.jsx",["539","540","541"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport Toggle from \"react-toggle\";\nrequire(\"react-toggle/style.css\");\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [order, setOrder] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [isHeadline, setIsHeadline] = useState(\"\");\n  const type = [\n    { value: 0, label: \"Non Headline\" },\n    { value: 1, label: \"Headline\" },\n  ];\n\n  const makePayload = () => {\n    let payload = new FormData();\n    payload.append(\"name\", name);\n    payload.append(\"order\", order);\n    payload.append(\"link\", link);\n    payload.append(\"photo_name\", files[0]);\n    payload.append(\"is_headline\", isHeadline ? 1 : 0);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`promo/store`, payload, \"POST\");\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Promo</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n          <InputComponent\n              label=\"Name\"\n              type=\"text\"\n              placeholder=\"Input the Promo's Name\"\n              onChangeValue={(val) => setName(val)}\n            />\n\n            <InputComponent\n              label=\"Order\"\n              type=\"text\"\n              placeholder=\"Input the Promo's Order\"\n              onChangeValue={(val) => setOrder(val)}\n            />\n\n            <InputComponent\n              label=\"Link\"\n              type=\"text\"\n              placeholder=\"Input the Promo's Link\"\n              onChangeValue={(val) => setLink(val)}\n            />\n            \n            <InputFileComponent\n              label=\"Photo Project\"\n              onChangeValue={(val) => setFiles(val)}\n            />\n\n            <FormGroup row>\n              <Label sm={2}>Headline</Label>\n              <Col sm={10}>\n                <Label>\n                  <Toggle\n                    className=\"mb-0\"\n                    id=\"toggle\"\n                    defaultChecked={isHeadline}\n                    onChange={(e) => setIsHeadline(e.target.checked)}\n                  />\n                  <span\n                    className=\"align-middle ml-2 text-muted\"\n                    htmlFor=\"toggle\"\n                  >\n                    {isHeadline ? \"Headline\" : \"Non Headline\"}\n                  </span>\n                </Label>\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/edit/Index.jsx",["542","543"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport Toggle from \"react-toggle\";\nrequire(\"react-toggle/style.css\");\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [preview, setPreview] = useState();\n  const { id } = useParams();\n  const type = [\n    { value: 0, label: \"Non Headline\" },\n    { value: 1, label: \"Headline\" },\n  ];\n\n  useEffect(() => {\n    API.get(`promo/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {    \n    let payload = new FormData();\n    payload.append(\"name\", data.name);\n    payload.append(\"order\", data.order);\n    payload.append(\"link\", data.link);\n    payload.append(\"is_headline\", data.is_headline ? 1 : 0);\n\n    if (data.photo_name instanceof File) {\n      payload.append(\"photo_name\", data.photo_name);\n    }\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`promo/${id}/update`, payload, \"POST\");\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const changeFile = (e) => {\n    setData({ ...data, photo_name: e.target.files[0] });\n    setPreview(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Promo</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"text\"\n                  placeholder=\"Input the Name\"\n                  type=\"text\"\n                  value={data?.name}\n                  onChange={(e) => setData({ ...data, name: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Order</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"text\"\n                  placeholder=\"Input the Order\"\n                  type=\"text\"\n                  value={data?.order}\n                  onChange={(e) => setData({ ...data, order: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Link</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"text\"\n                  placeholder=\"Input the Link\"\n                  type=\"text\"\n                  value={data?.link}\n                  onChange={(e) => setData({ ...data, link: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Image</Label>\n              <Col sm={10}>\n                <img\n                  className=\"w-50 mb-2\"\n                  src={\n                    preview ? preview : `${API.urlStorage}${data?.photo_name}`\n                  }\n                  alt={data?.link}\n                />\n                <div>\n                  <label className=\"custom-file-upload text-center\">\n                    <input\n                      type=\"file\"\n                      id=\"file1\"\n                      onChange={(e) => changeFile(e)}\n                      accept=\"image/*\"\n                    />\n                    {data?.photo_name ? <>Edit</> : <>Add</>}\n                  </label>\n                </div>\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Headline</Label>\n              <Col sm={10}>\n                {data && (\n                  <Label>\n                    <Toggle\n                      className=\"mb-0\"\n                      id=\"toggle\"\n                      defaultChecked={data?.is_headline}\n                      onChange={(e) =>\n                        setData({ ...data, is_headline: e.target.checked })\n                      }\n                    />\n                    <span\n                      className=\"align-middle ml-2 text-muted\"\n                      htmlFor=\"toggle\"\n                    >\n                      {data?.is_headline ? \"Headline\" : \"Non Headline\"}\n                    </span>\n                  </Label>\n                )}\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/add/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/list/Index.jsx",["544","545"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`promo/list/all`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`promo/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `Promo was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Name\",\n      cell: (row) => row.name,  \n    },\n    {\n      name: \"Link\",\n      cell: (row) => (<a href={row.link} target=\"_blank\">{row.link}</a>),\n    },\n    {\n      name: \"Type\",\n      cell: (row) =>\n        row.is_headline ? (\n          <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n            Headline\n          </span>\n        ) : (\n          <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n            Non Headline\n          </span>\n        ),\n    },\n     {\n      name: \"Order Number\",\n      cell: (row) => row.order,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/promo/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Data Promo</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/promo/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Loading Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/InputComponent.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/SnackbarComponent.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/SelectComponent.jsx",["546"],"import React, { useState, useEffect } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\n\nfunction SelectComponent(props) {\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    setValue(e.target.value);\n  }\n\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <Input\n          name=\"select\"\n          type=\"select\"\n          defaultValue={0}\n          onChange={(e) => onChangeValue(e)}\n        >\n          <option value={0}>{props.placeholder}</option>\n          {props.data.map((item) => (\n            <option value={item.value}>{item.label}</option>\n          ))}\n        </Input>\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\nexport default SelectComponent;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Region/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Contact/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/modal/modalConfirmation.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/InputFileComponent.jsx",["547","548"],"import React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, FormText, Input, Label } from \"reactstrap\";\nrequire(\"../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction InputFileComponent(props) {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    console.log(e);\n    setValue(e.target.files);\n  }\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={2}>\n        <div className=\"mr-2\" style={styles}>\n          <label className=\"custom-file-upload w-100\">\n            <input\n              type=\"file\"\n              id=\"file1\"\n              onChange={onChangeValue}\n              accept=\"image/*\"\n              multiple\n            />\n            Choose\n          </label>\n        </div>\n        <FormText>{props?.caption}</FormText>\n        {value && <FormText>{value.length} File(s) Selected</FormText>}\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\n\nexport default InputFileComponent;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/MultipleSelectComponent.jsx",["549"],"import React, { useState, useEffect } from \"react\";\nimport { Col, FormGroup, Label } from \"reactstrap\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\n\nfunction MultipleSelectComponent(props) {\n  const animatedComponents = makeAnimated();\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    setValue(e);\n  }\n\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <Select\n          closeMenuOnSelect={false}\n          components={animatedComponents}\n          onChange={onChangeValue}\n          isMulti\n          options={props.data}\n        />\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\nexport default MultipleSelectComponent;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/components/TextEditorComponent.jsx",["550"],"import React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Label } from \"reactstrap\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\n\nfunction TextEditorComponent(props) {\n  const [value, setValue] = useState();\n  useEffect(() => props.onChangeValue(value), []);\n\n  function onChangeValue(val) {\n    setValue(val);\n    props.onChangeValue(val);\n  }\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <TextEditorTwo onChange={(val) => onChangeValue(val)} />\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\n\nexport default TextEditorComponent;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/components/Data.jsx",["551"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport TextEditorTwo from \"../../../../shared/components/text-editor/TextEditor\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`project/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      project_name: data.project_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: 0,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.post(`project/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Project Name</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Product's Name\"\n              type=\"text\"\n              value={data?.project_name}\n              onChange={(e) =>\n                setData({ ...data, project_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Description</Label>\n          <Col sm={10}>\n            {data.description && (\n              <TextEditorTwo\n                onChange={(val) => setData({ ...data, description: val })}\n                initVal={data.description}\n              />\n            )}\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Share Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Share Count\"\n              type=\"text\"\n              value={data?.share_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={makePayload}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/edit/components/Image.jsx",["552","553","554"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, FormGroup, Label, Row, Spinner } from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport { render } from \"@testing-library/react\";\n\nrequire(\"../../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPhoto();\n  }, []);\n\n  const getPhoto = () => {\n    API.get(`project/${id}/project-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        let length = result.data.length >= 3 ? result.data.length : 3;\n        for (let i = 0; i < length; i++) {\n          if (result.data[i]) {\n            photo.push({\n              id: result.data[i].id.toString(),\n              photo_name: `${API.urlStorage}${result.data[i].photo_name}`,\n            });\n          } else {\n            photo.push({\n              id: `x${i}`,\n              photo_name: \"\",\n            });\n          }\n        }\n        setDataFile(photo);\n      }\n    });\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n  };\n\n  const uploadImage = async () => {\n    setIsLoading(true);\n    for (let i = 0; i < files.length; i++) {\n      let payload = new FormData();\n      payload.append(\"photo\", files[i].photo_name);\n      if (files[i].id.indexOf(\"x\") > -1) {\n        await API.uploadFile(\n          `project/${id}/store-project-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      } else {\n        await API.uploadFile(\n          `project/${files[i].id}/update-project-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const deleteImage = (id) => {\n    if (id.indexOf(\"x\") > -1) {\n      const items = files.filter((item) => item.id !== id);\n      setFiles(items);\n\n      var idxDataFile = dataFile.findIndex((x) => x.id === id);\n      let updateValue = dataFile[idxDataFile];\n      updateValue[\"photo_name\"] = \"\";\n\n      setDataFile([\n        ...dataFile.slice(0, idxDataFile),\n        updateValue,\n        ...dataFile.slice(idxDataFile + 1),\n      ]);\n    } else {\n      let resp = API.deleteData(`project/${id}/delete-project-photo`);\n      getPhoto();\n      handleMessage(resp);\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Project Photo</Label>\n          <Col sm={10}>\n            <Row className=\"d-flex align-items-end\">\n              {/* {renderImage} */}\n              {dataFile.map((item) => (\n                <Col sm={4}>\n                  <div>\n                    <img\n                      className=\"img-preview mb-2\"\n                      src={`${item.photo_name}`}\n                      alt=\"\"\n                    />\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"mr-2\" style={styles}>\n                        <label className=\"custom-file-upload w-100\">\n                          <input\n                            type=\"file\"\n                            id=\"file1\"\n                            onChange={(e) => onChangeFiles(e, item.id)}\n                            accept=\"image/*\"\n                          />\n                          {item.photo_name ? <>Edit</> : <>Add</>}\n                        </label>\n                      </div>\n                      {item.photo_name && (\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-danger text-white\"\n                          onClick={() => deleteImage(item.id)}\n                        >\n                          Remove\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={uploadImage}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/text-editor/TextEditor.jsx",["555","556","557"],"import React, { memo, useState } from \"react\";\nimport {\n  EditorState,\n  convertToRaw,\n  convertFromHTML,\n  ContentState,\n} from \"draft-js\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport draftToHtml from \"draftjs-to-html\";\nimport PropTypes, { string } from \"prop-types\";\n\nfunction TextEditorTwo(props) {\n  const ToolbarOptions = {\n    options: [\"inline\", \"blockType\", \"list\", \"textAlign\", \"link\", \"history\"],\n    inline: {\n      options: [\"bold\", \"italic\", \"underline\"],\n    },\n  };\n\n  const _getInitValue = () => {\n    if (props.initVal) {\n      console.log(props.initVal);\n      const contentBlocks = convertFromHTML(props.initVal);\n      const contentState = ContentState.createFromBlockArray(contentBlocks);\n      return EditorState.createWithContent(contentState);\n    } else {\n      return EditorState.createEmpty();\n    }\n  };\n  const [editorState, setEditorState] = useState(_getInitValue());\n\n  const onEditorStateChange = (items) => {\n    setEditorState(items);\n    if (props.onChange) {\n      props.onChange(draftToHtml(convertToRaw(items.getCurrentContent())));\n    }\n  };\n\n  return (\n    <div className=\"text-editor\">\n      <Editor\n        editorState={editorState}\n        wrapperClassName=\"demo-wrapper\"\n        editorClassName=\"demo-editor\"\n        onEditorStateChange={onEditorStateChange}\n        toolbar={ToolbarOptions}\n        rawContentState={editorState}\n      />\n    </div>\n  );\n}\n\nexport default TextEditorTwo;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Project/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/services/index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Chat/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Email/Subscriber/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterUser/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Promo/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/shared/components/form/CheckBox.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterProduct/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarProfile.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarSidebarButton.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/components/Data.jsx",["558","559","560","561"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport TextEditorTwo from \"../../../../shared/components/text-editor/TextEditor\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const animatedComponents = makeAnimated();\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: `${\n              item.category_parent ? item.category_parent + \" - \" : \"\"\n            }${item.category_name}`,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n    API.get(`product/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data[0].product_category.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.category_name,\n          })\n        );\n        setCategory(list);\n        setData(result.data[0]);\n      }\n    });\n    console.log(category);\n  }, []);\n\n  const makePayload = () => {\n    let cat = [];\n    category.map((item) => cat.push(item.value));\n    let payload = JSON.stringify({\n      product_type_id: data.type_id,\n      product_name: data.product_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      product_category_id: cat,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.post(`product/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Product Name</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Product's Name\"\n              type=\"text\"\n              value={data?.product_name}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Description</Label>\n          <Col sm={10}>\n            {data.description && (\n              <TextEditorTwo\n                onChange={(val) => setData({ ...data, description: val })}\n                initVal={data.description}\n              />\n            )}\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Type</Label>\n          <Col sm={10}>\n            <Input\n              name=\"select\"\n              type=\"select\"\n              value={data.type_id}\n              onChange={(e) => setData({ ...data, type_id: e.target.value })}\n            >\n              <option value={0}>Select</option>\n              {listType.map((item) => (\n                <option value={item.value}>{item.label}</option>\n              ))}\n            </Input>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Category Product</Label>\n          <Col sm={10}>\n            <Select\n              value={category}\n              isMulti\n              closeMenuOnSelect={false}\n              components={animatedComponents}\n              onChange={(e) => setCategory(e)}\n              options={listCategory}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Share Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Share Count\"\n              type=\"text\"\n              value={data?.share_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Seen Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Seen Count\"\n              type=\"text\"\n              value={data?.seen_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={makePayload}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/SocialMedia/list/modal/delete.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Product/edit/components/Image.jsx",["562","563","564"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, FormGroup, Label, Row, Spinner } from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport { render } from \"@testing-library/react\";\n\nrequire(\"../../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPhoto();\n  }, []);\n\n  const getPhoto = () => {\n    API.get(`product/${id}/product-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        let length = result.data.length >= 5 ? result.data.length : 5;\n        for (let i = 0; i < length; i++) {\n          if (result.data[i]) {\n            photo.push({\n              id: result.data[i].id.toString(),\n              photo_name: `${API.urlStorage}${result.data[i].photo_name}`,\n            });\n          } else {\n            photo.push({\n              id: `x${i}`,\n              photo_name: \"\",\n            });\n          }\n        }\n        setDataFile(photo);\n      }\n    });\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n\n    console.log(files);\n  };\n\n  const uploadImage = async () => {\n    setIsLoading(true);\n    for (let i = 0; i < files.length; i++) {\n      let payload = new FormData();\n      payload.append(\"photo\", files[i].photo_name);\n      if (files[i].id.indexOf(\"x\") > -1) {\n        await API.uploadFile(\n          `product/${id}/store-product-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      } else {\n        await API.uploadFile(\n          `product/${files[i].id}/update-product-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const deleteImage = (id) => {\n    if (id.indexOf(\"x\") > -1) {\n      const items = files.filter((item) => item.id !== id);\n      setFiles(items);\n\n      var idxDataFile = dataFile.findIndex((x) => x.id === id);\n      let updateValue = dataFile[idxDataFile];\n      updateValue[\"photo_name\"] = \"\";\n\n      setDataFile([\n        ...dataFile.slice(0, idxDataFile),\n        updateValue,\n        ...dataFile.slice(idxDataFile + 1),\n      ]);\n    } else {\n      let resp = API.deleteData(`product/${id}/delete-product-photo`);\n      handleMessage(resp);\n      getPhoto();\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Product Photo</Label>\n          <Col sm={10}>\n            <Row className=\"d-flex align-items-end\">\n              {/* {renderImage} */}\n              {dataFile.map((item) => (\n                <Col sm={4}>\n                  <div>\n                    <img\n                      className=\"img-preview mb-2\"\n                      src={`${item.photo_name}`}\n                      alt=\"\"\n                    />\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"mr-2\" style={styles}>\n                        <label className=\"custom-file-upload w-100\">\n                          <input\n                            type=\"file\"\n                            id=\"file1\"\n                            onChange={(e) => onChangeFiles(e, item.id)}\n                            accept=\"image/*\"\n                          />\n                          {item.photo_name ? <>Edit</> : <>Add</>}\n                        </label>\n                      </div>\n                      {item.photo_name && (\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-danger text-white\"\n                          onClick={() => deleteImage(item.id)}\n                        >\n                          Remove\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={uploadImage}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/add/Index.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/edit/Index.jsx",["565","566","567"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index(props) {\n  const [type, setType] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  function onChangeType(val) {\n    setType(val);\n  }\n\n  function save() {\n    let payload = JSON.stringify({ type_name: type });\n    setIsLoading(true);\n    API.put(`product-type/${id}/update`, payload).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(\"Data Saved\");\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(result.message);\n      }\n    });\n  }\n\n  useEffect(() => {\n    API.get(`product-type/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setType(result.data[0].type_name);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert}\n        message={message}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Type</h5>\n                {/* <h5 className=\"subhead\">Example subhead</h5> */}\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"type_name\"\n                  placeholder=\"Input the Type Name\"\n                  type=\"text\"\n                  value={type}\n                  onChange={(e) => setType(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/list/Index.jsx",["568","569"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [dataModal, setDataModal] = useState(\"\");\n  const [openModalDelete, setOpenModalDelete] = useState(\n    dataModal ? true : false\n  );\n\n  const deleteCategory = () => {\n    API.deleteData(`product-type/${dataModal.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert(true);\n        setMessage(`${dataModal.type_name} was deleted`);\n        setOpenModalDelete(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Type Product Name\",\n      cell: (row) => row.type_name,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/type/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => (setOpenModalDelete(true), setDataModal(row))}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={openModalDelete}\n          data={dataModal}\n          onHide={() => setOpenModalDelete(false)}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert}\n          message={message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">Data Type</h5>\n                  {/* <h5 className=\"subhead\">Example subhead</h5> */}\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/type/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              // paginationServer\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Loading Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarContent.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/topbar/TopbarMenuLink.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarCategory.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/Layout/sidebar/SidebarLink.jsx",[],"/Users/gusnaikhsan/Project/yonny-admin/src/containers/MasterType/list/modal/delete.jsx",[],{"ruleId":"570","replacedBy":"571"},{"ruleId":"572","replacedBy":"573"},{"ruleId":"574","severity":1,"message":"575","line":3,"column":10,"nodeType":"576","messageId":"577","endLine":3,"endColumn":13},{"ruleId":"574","severity":1,"message":"578","line":3,"column":15,"nodeType":"576","messageId":"577","endLine":3,"endColumn":18},{"ruleId":"574","severity":1,"message":"579","line":2,"column":10,"nodeType":"576","messageId":"577","endLine":2,"endColumn":14},{"ruleId":"574","severity":1,"message":"580","line":3,"column":8,"nodeType":"576","messageId":"577","endLine":3,"endColumn":20},{"ruleId":"574","severity":1,"message":"581","line":4,"column":8,"nodeType":"576","messageId":"577","endLine":4,"endColumn":22},{"ruleId":"574","severity":1,"message":"579","line":2,"column":10,"nodeType":"576","messageId":"577","endLine":2,"endColumn":14},{"ruleId":"574","severity":1,"message":"580","line":3,"column":8,"nodeType":"576","messageId":"577","endLine":3,"endColumn":20},{"ruleId":"574","severity":1,"message":"581","line":4,"column":8,"nodeType":"576","messageId":"577","endLine":4,"endColumn":22},{"ruleId":"574","severity":1,"message":"582","line":3,"column":16,"nodeType":"576","messageId":"577","endLine":3,"endColumn":24},{"ruleId":"574","severity":1,"message":"583","line":8,"column":8,"nodeType":"576","messageId":"577","endLine":8,"endColumn":27},{"ruleId":"574","severity":1,"message":"584","line":11,"column":8,"nodeType":"576","messageId":"577","endLine":11,"endColumn":16},{"ruleId":"574","severity":1,"message":"585","line":67,"column":9,"nodeType":"576","messageId":"577","endLine":67,"endColumn":13},{"ruleId":"574","severity":1,"message":"586","line":3,"column":3,"nodeType":"576","messageId":"577","endLine":3,"endColumn":9},{"ruleId":"574","severity":1,"message":"587","line":7,"column":3,"nodeType":"576","messageId":"577","endLine":7,"endColumn":7},{"ruleId":"574","severity":1,"message":"588","line":8,"column":3,"nodeType":"576","messageId":"577","endLine":8,"endColumn":12},{"ruleId":"574","severity":1,"message":"589","line":9,"column":3,"nodeType":"576","messageId":"577","endLine":9,"endColumn":8},{"ruleId":"574","severity":1,"message":"590","line":10,"column":3,"nodeType":"576","messageId":"577","endLine":10,"endColumn":8},{"ruleId":"574","severity":1,"message":"591","line":15,"column":3,"nodeType":"576","messageId":"577","endLine":15,"endColumn":10},{"ruleId":"574","severity":1,"message":"592","line":23,"column":8,"nodeType":"576","messageId":"577","endLine":23,"endColumn":14},{"ruleId":"574","severity":1,"message":"593","line":24,"column":8,"nodeType":"576","messageId":"577","endLine":24,"endColumn":21},{"ruleId":"574","severity":1,"message":"594","line":35,"column":9,"nodeType":"576","messageId":"577","endLine":35,"endColumn":27},{"ruleId":"574","severity":1,"message":"595","line":36,"column":10,"nodeType":"576","messageId":"577","endLine":36,"endColumn":22},{"ruleId":"574","severity":1,"message":"596","line":37,"column":10,"nodeType":"576","messageId":"577","endLine":37,"endColumn":18},{"ruleId":"574","severity":1,"message":"597","line":38,"column":20,"nodeType":"576","messageId":"577","endLine":38,"endColumn":31},{"ruleId":"574","severity":1,"message":"598","line":39,"column":10,"nodeType":"576","messageId":"577","endLine":39,"endColumn":19},{"ruleId":"599","severity":1,"message":"600","line":80,"column":6,"nodeType":"601","endLine":80,"endColumn":8,"suggestions":"602"},{"ruleId":"574","severity":1,"message":"603","line":82,"column":9,"nodeType":"576","messageId":"577","endLine":82,"endColumn":20},{"ruleId":"604","severity":1,"message":"605","line":81,"column":11,"nodeType":"606","endLine":85,"endColumn":12},{"ruleId":"599","severity":1,"message":"607","line":91,"column":6,"nodeType":"601","endLine":91,"endColumn":8,"suggestions":"608"},{"ruleId":"604","severity":1,"message":"605","line":96,"column":10,"nodeType":"606","endLine":100,"endColumn":12},{"ruleId":"604","severity":1,"message":"605","line":111,"column":11,"nodeType":"606","endLine":115,"endColumn":12},{"ruleId":"604","severity":1,"message":"605","line":60,"column":11,"nodeType":"606","endLine":64,"endColumn":12},{"ruleId":"574","severity":1,"message":"609","line":22,"column":10,"nodeType":"576","messageId":"577","endLine":22,"endColumn":17},{"ruleId":"574","severity":1,"message":"610","line":22,"column":19,"nodeType":"576","messageId":"577","endLine":22,"endColumn":29},{"ruleId":"599","severity":1,"message":"607","line":50,"column":6,"nodeType":"601","endLine":50,"endColumn":8,"suggestions":"611"},{"ruleId":"599","severity":1,"message":"607","line":66,"column":6,"nodeType":"601","endLine":66,"endColumn":8,"suggestions":"612"},{"ruleId":"613","severity":1,"message":"614","line":59,"column":23,"nodeType":"606","messageId":"615","endLine":59,"endColumn":58,"fix":"616"},{"ruleId":"604","severity":1,"message":"605","line":73,"column":11,"nodeType":"606","endLine":77,"endColumn":12},{"ruleId":"574","severity":1,"message":"589","line":9,"column":3,"nodeType":"576","messageId":"577","endLine":9,"endColumn":8},{"ruleId":"574","severity":1,"message":"590","line":10,"column":3,"nodeType":"576","messageId":"577","endLine":10,"endColumn":8},{"ruleId":"574","severity":1,"message":"617","line":18,"column":8,"nodeType":"576","messageId":"577","endLine":18,"endColumn":14},{"ruleId":"574","severity":1,"message":"618","line":27,"column":20,"nodeType":"576","messageId":"577","endLine":27,"endColumn":31},{"ruleId":"599","severity":1,"message":"619","line":46,"column":6,"nodeType":"601","endLine":46,"endColumn":8,"suggestions":"620"},{"ruleId":"574","severity":1,"message":"621","line":1,"column":27,"nodeType":"576","messageId":"577","endLine":1,"endColumn":36},{"ruleId":"574","severity":1,"message":"622","line":13,"column":8,"nodeType":"576","messageId":"577","endLine":13,"endColumn":31},{"ruleId":"574","severity":1,"message":"623","line":16,"column":8,"nodeType":"576","messageId":"577","endLine":16,"endColumn":23},{"ruleId":"574","severity":1,"message":"624","line":19,"column":8,"nodeType":"576","messageId":"577","endLine":19,"endColumn":13},{"ruleId":"574","severity":1,"message":"625","line":20,"column":8,"nodeType":"576","messageId":"577","endLine":20,"endColumn":18},{"ruleId":"604","severity":1,"message":"605","line":64,"column":11,"nodeType":"606","endLine":68,"endColumn":12},{"ruleId":"574","severity":1,"message":"586","line":3,"column":3,"nodeType":"576","messageId":"577","endLine":3,"endColumn":9},{"ruleId":"574","severity":1,"message":"587","line":7,"column":3,"nodeType":"576","messageId":"577","endLine":7,"endColumn":7},{"ruleId":"574","severity":1,"message":"588","line":8,"column":3,"nodeType":"576","messageId":"577","endLine":8,"endColumn":12},{"ruleId":"574","severity":1,"message":"590","line":9,"column":3,"nodeType":"576","messageId":"577","endLine":9,"endColumn":8},{"ruleId":"574","severity":1,"message":"591","line":14,"column":3,"nodeType":"576","messageId":"577","endLine":14,"endColumn":10},{"ruleId":"574","severity":1,"message":"593","line":21,"column":8,"nodeType":"576","messageId":"577","endLine":21,"endColumn":21},{"ruleId":"574","severity":1,"message":"626","line":27,"column":7,"nodeType":"576","messageId":"577","endLine":27,"endColumn":13},{"ruleId":"574","severity":1,"message":"598","line":38,"column":10,"nodeType":"576","messageId":"577","endLine":38,"endColumn":19},{"ruleId":"599","severity":1,"message":"627","line":69,"column":6,"nodeType":"601","endLine":69,"endColumn":8,"suggestions":"628"},{"ruleId":"574","severity":1,"message":"603","line":71,"column":9,"nodeType":"576","messageId":"577","endLine":71,"endColumn":20},{"ruleId":"574","severity":1,"message":"629","line":108,"column":9,"nodeType":"576","messageId":"577","endLine":108,"endColumn":22},{"ruleId":"574","severity":1,"message":"630","line":136,"column":9,"nodeType":"576","messageId":"577","endLine":136,"endColumn":20},{"ruleId":"574","severity":1,"message":"586","line":2,"column":10,"nodeType":"576","messageId":"577","endLine":2,"endColumn":16},{"ruleId":"574","severity":1,"message":"631","line":4,"column":10,"nodeType":"576","messageId":"577","endLine":4,"endColumn":17},{"ruleId":"604","severity":1,"message":"605","line":73,"column":11,"nodeType":"606","endLine":77,"endColumn":12},{"ruleId":"599","severity":1,"message":"607","line":37,"column":6,"nodeType":"601","endLine":37,"endColumn":8,"suggestions":"632"},{"ruleId":"574","severity":1,"message":"589","line":10,"column":3,"nodeType":"576","messageId":"577","endLine":10,"endColumn":8},{"ruleId":"574","severity":1,"message":"633","line":21,"column":10,"nodeType":"576","messageId":"577","endLine":21,"endColumn":22},{"ruleId":"574","severity":1,"message":"609","line":28,"column":10,"nodeType":"576","messageId":"577","endLine":28,"endColumn":17},{"ruleId":"599","severity":1,"message":"607","line":50,"column":6,"nodeType":"601","endLine":50,"endColumn":8,"suggestions":"634"},{"ruleId":"613","severity":1,"message":"614","line":115,"column":21,"nodeType":"606","messageId":"615","endLine":118,"endColumn":22,"fix":"635"},{"ruleId":"574","severity":1,"message":"636","line":14,"column":8,"nodeType":"576","messageId":"577","endLine":14,"endColumn":26},{"ruleId":"599","severity":1,"message":"607","line":55,"column":6,"nodeType":"601","endLine":55,"endColumn":8,"suggestions":"637"},{"ruleId":"604","severity":1,"message":"605","line":66,"column":11,"nodeType":"606","endLine":70,"endColumn":12},{"ruleId":"574","severity":1,"message":"638","line":21,"column":10,"nodeType":"576","messageId":"577","endLine":21,"endColumn":15},{"ruleId":"574","severity":1,"message":"639","line":16,"column":8,"nodeType":"576","messageId":"577","endLine":16,"endColumn":22},{"ruleId":"574","severity":1,"message":"623","line":17,"column":8,"nodeType":"576","messageId":"577","endLine":17,"endColumn":23},{"ruleId":"574","severity":1,"message":"640","line":29,"column":12,"nodeType":"576","messageId":"577","endLine":29,"endColumn":34},{"ruleId":"574","severity":1,"message":"641","line":33,"column":12,"nodeType":"576","messageId":"577","endLine":33,"endColumn":28},{"ruleId":"599","severity":1,"message":"607","line":64,"column":6,"nodeType":"601","endLine":64,"endColumn":8,"suggestions":"642"},{"ruleId":"574","severity":1,"message":"582","line":3,"column":16,"nodeType":"576","messageId":"577","endLine":3,"endColumn":24},{"ruleId":"574","severity":1,"message":"643","line":5,"column":8,"nodeType":"576","messageId":"577","endLine":5,"endColumn":15},{"ruleId":"574","severity":1,"message":"583","line":9,"column":8,"nodeType":"576","messageId":"577","endLine":9,"endColumn":27},{"ruleId":"574","severity":1,"message":"644","line":23,"column":9,"nodeType":"576","messageId":"577","endLine":23,"endColumn":21},{"ruleId":"604","severity":1,"message":"605","line":65,"column":11,"nodeType":"606","endLine":69,"endColumn":12},{"ruleId":"645","severity":1,"message":"646","line":68,"column":53,"nodeType":"647","messageId":"648","endLine":68,"endColumn":54},{"ruleId":"574","severity":1,"message":"621","line":1,"column":27,"nodeType":"576","messageId":"577","endLine":1,"endColumn":36},{"ruleId":"574","severity":1,"message":"623","line":15,"column":8,"nodeType":"576","messageId":"577","endLine":15,"endColumn":23},{"ruleId":"574","severity":1,"message":"649","line":33,"column":9,"nodeType":"576","messageId":"577","endLine":33,"endColumn":13},{"ruleId":"574","severity":1,"message":"649","line":30,"column":9,"nodeType":"576","messageId":"577","endLine":30,"endColumn":13},{"ruleId":"599","severity":1,"message":"607","line":41,"column":6,"nodeType":"601","endLine":41,"endColumn":8,"suggestions":"650"},{"ruleId":"613","severity":1,"message":"614","line":50,"column":23,"nodeType":"606","messageId":"615","endLine":50,"endColumn":58,"fix":"651"},{"ruleId":"604","severity":1,"message":"605","line":81,"column":11,"nodeType":"606","endLine":85,"endColumn":12},{"ruleId":"599","severity":1,"message":"652","line":8,"column":6,"nodeType":"601","endLine":8,"endColumn":13,"suggestions":"653"},{"ruleId":"574","severity":1,"message":"589","line":2,"column":36,"nodeType":"576","messageId":"577","endLine":2,"endColumn":41},{"ruleId":"599","severity":1,"message":"652","line":14,"column":6,"nodeType":"601","endLine":14,"endColumn":13,"suggestions":"654"},{"ruleId":"599","severity":1,"message":"652","line":11,"column":6,"nodeType":"601","endLine":11,"endColumn":13,"suggestions":"655"},{"ruleId":"599","severity":1,"message":"656","line":7,"column":47,"nodeType":"601","endLine":7,"endColumn":49,"suggestions":"657"},{"ruleId":"599","severity":1,"message":"607","line":32,"column":6,"nodeType":"601","endLine":32,"endColumn":8,"suggestions":"658"},{"ruleId":"574","severity":1,"message":"659","line":6,"column":10,"nodeType":"576","messageId":"577","endLine":6,"endColumn":16},{"ruleId":"599","severity":1,"message":"660","line":27,"column":6,"nodeType":"601","endLine":27,"endColumn":8,"suggestions":"661"},{"ruleId":"604","severity":1,"message":"605","line":174,"column":25,"nodeType":"606","endLine":178,"endColumn":26},{"ruleId":"574","severity":1,"message":"662","line":1,"column":17,"nodeType":"576","messageId":"577","endLine":1,"endColumn":21},{"ruleId":"574","severity":1,"message":"663","line":10,"column":8,"nodeType":"576","messageId":"577","endLine":10,"endColumn":17},{"ruleId":"574","severity":1,"message":"664","line":10,"column":21,"nodeType":"576","messageId":"577","endLine":10,"endColumn":27},{"ruleId":"574","severity":1,"message":"665","line":4,"column":3,"nodeType":"576","messageId":"577","endLine":4,"endColumn":7},{"ruleId":"574","severity":1,"message":"666","line":5,"column":3,"nodeType":"576","messageId":"577","endLine":5,"endColumn":11},{"ruleId":"574","severity":1,"message":"578","line":11,"column":3,"nodeType":"576","messageId":"577","endLine":11,"endColumn":6},{"ruleId":"599","severity":1,"message":"667","line":76,"column":6,"nodeType":"601","endLine":76,"endColumn":8,"suggestions":"668"},{"ruleId":"574","severity":1,"message":"659","line":6,"column":10,"nodeType":"576","messageId":"577","endLine":6,"endColumn":16},{"ruleId":"599","severity":1,"message":"660","line":27,"column":6,"nodeType":"601","endLine":27,"endColumn":8,"suggestions":"669"},{"ruleId":"604","severity":1,"message":"605","line":177,"column":25,"nodeType":"606","endLine":181,"endColumn":26},{"ruleId":"574","severity":1,"message":"639","line":16,"column":8,"nodeType":"576","messageId":"577","endLine":16,"endColumn":22},{"ruleId":"574","severity":1,"message":"670","line":26,"column":12,"nodeType":"576","messageId":"577","endLine":26,"endColumn":24},{"ruleId":"599","severity":1,"message":"607","line":53,"column":6,"nodeType":"601","endLine":53,"endColumn":8,"suggestions":"671"},{"ruleId":"604","severity":1,"message":"605","line":61,"column":11,"nodeType":"606","endLine":65,"endColumn":12},{"ruleId":"645","severity":1,"message":"646","line":64,"column":53,"nodeType":"647","messageId":"648","endLine":64,"endColumn":54},"no-native-reassign",["672"],"no-negated-in-lhs",["673"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Link' is defined but never used.","'FacebookIcon' is defined but never used.","'GooglePlusIcon' is defined but never used.","'Redirect' is defined but never used.","'renderCheckBoxField' is defined but never used.","'MuiAlert' is defined but never used.","'file' is assigned a value but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'Spinner' is defined but never used.","'Select' is defined but never used.","'TextEditorTwo' is defined but never used.","'animatedComponents' is assigned a value but never used.","'listCategory' is assigned a value but never used.","'listType' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["674"],"'makePayload' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["675"],"'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["676"],["677"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"678","text":"679"},"'Toggle' is defined but never used.","'setOnFooter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listRegion'. Either include it or remove the dependency array.",["680"],"'useEffect' is defined but never used.","'MultipleSelectComponent' is defined but never used.","'SelectComponent' is defined but never used.","'axios' is defined but never used.","'FileBase64' is defined but never used.","'styles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataFile' and 'id'. Either include them or remove the dependency array.",["681"],"'onChangeFiles' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'NavLink' is defined but never used.",["682"],"'emailAddress' is assigned a value but never used.",["683"],{"range":"684","text":"679"},"'InputFileComponent' is defined but never used.",["685"],"'valid' is assigned a value but never used.","'InputComponent' is defined but never used.","'onChangeCategoryParent' is defined but never used.","'onChangeCategory' is defined but never used.",["686"],"'EyeIcon' is defined but never used.","'showPassword' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'type' is assigned a value but never used.",["687"],{"range":"688","text":"679"},"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["689"],["690"],["691"],"React Hook useEffect has missing dependencies: 'props' and 'value'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["692"],["693"],"'render' is defined but never used.","React Hook useEffect has a missing dependency: 'getPhoto'. Either include it or remove the dependency array.",["694"],"'memo' is defined but never used.","'PropTypes' is defined but never used.","'string' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","React Hook useEffect has missing dependencies: 'category' and 'id'. Either include them or remove the dependency array.",["695"],["696"],"'onChangeType' is defined but never used.",["697"],"no-global-assign","no-unsafe-negation",{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"700","fix":"702"},{"desc":"700","fix":"703"},[1935,1935]," rel=\"noreferrer\"",{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"700","fix":"708"},{"desc":"700","fix":"709"},[3260,3260],{"desc":"700","fix":"710"},{"desc":"700","fix":"711"},{"desc":"700","fix":"712"},[1459,1459],{"desc":"713","fix":"714"},{"desc":"713","fix":"715"},{"desc":"713","fix":"716"},{"desc":"713","fix":"717"},{"desc":"700","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"719","fix":"723"},{"desc":"700","fix":"724"},"Update the dependencies array to be: [data, id]",{"range":"725","text":"726"},"Update the dependencies array to be: [id]",{"range":"727","text":"728"},{"range":"729","text":"728"},{"range":"730","text":"728"},"Update the dependencies array to be: [listRegion]",{"range":"731","text":"732"},"Update the dependencies array to be: [dataFile, id]",{"range":"733","text":"734"},{"range":"735","text":"728"},{"range":"736","text":"728"},{"range":"737","text":"728"},{"range":"738","text":"728"},{"range":"739","text":"728"},"Update the dependencies array to be: [props, value]",{"range":"740","text":"741"},{"range":"742","text":"741"},{"range":"743","text":"741"},{"range":"744","text":"741"},{"range":"745","text":"728"},"Update the dependencies array to be: [getPhoto]",{"range":"746","text":"747"},"Update the dependencies array to be: [category, id]",{"range":"748","text":"749"},{"range":"750","text":"747"},{"range":"751","text":"728"},[2106,2108],"[data, id]",[2415,2417],"[id]",[1316,1318],[1588,1590],[1343,1345],"[listRegion]",[1750,1752],"[dataFile, id]",[889,891],[1357,1359],[1470,1472],[1752,1754],[945,947],[244,251],"[props, value]",[369,376],[375,382],[308,310],[794,796],[785,787],"[getPhoto]",[2057,2059],"[category, id]",[785,787],[1343,1345]]