[{"/Users/mznaufalmaulana/Projects/yonny-admin/src/index.js":"1","/Users/mznaufalmaulana/Projects/yonny-admin/src/serviceWorker.js":"2","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/App.jsx":"3","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/store.js":"4","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/ScrollToTop.jsx":"5","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/index.js":"6","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/themeReducer.js":"7","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/sidebarReducer.js":"8","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/rtlReducer.js":"9","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/MainWrapper.jsx":"10","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/themeActions.js":"11","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/sidebarActions.js":"12","/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/rtlActions.js":"13","/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/prop-types/ReducerProps.js":"14","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/index.jsx":"15","/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/form/CheckBox.jsx":"16","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/Sidebar.jsx":"17","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/Topbar.jsx":"18","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarProfile.jsx":"19","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarSidebarButton.jsx":"20","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarContent.jsx":"21","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarMenuLink.jsx":"22","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarCategory.jsx":"23","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarLink.jsx":"24","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/Router.jsx":"25","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/LogIn/index.jsx":"26","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Example/index.jsx":"27","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/ExampleTwo/index.jsx":"28","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/LogIn/components/LogInForm.jsx":"29","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Example/components/ExampleCard.jsx":"30","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/ExampleTwo/components/ExampleCard.jsx":"31","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/index.jsx":"32","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/add/index.jsx":"33","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/InputComponent.jsx":"34","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/SelectComponent.jsx":"35","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/add/index.jsx":"36","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/MultipleSelectComponent.jsx":"37","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/InputFileComponent.jsx":"38","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/add/index.jsx":"39","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/index.jsx":"40","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/index.jsx":"41","/Users/mznaufalmaulana/Projects/yonny-admin/src/services/index.jsx":"42","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/SnackbarComponent.jsx":"43","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/index.jsx":"44","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/index.jsx":"45","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/index.jsx":"46","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/Index.jsx":"47","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/add/Index.jsx":"48","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/Index.jsx":"49","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/edit/Index.jsx":"50","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/add/Index.jsx":"51","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/edit/Index.jsx":"52","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/add/Index.jsx":"53","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/list/Index.jsx":"54","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/TextEditorComponent.jsx":"55","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/list/modal/delete.jsx":"56","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/modal/delete.jsx":"57","/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/text-editor/TextEditor.jsx":"58","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/Index.jsx":"59","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/index.jsx":"60","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/Index.jsx":"61","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/add/Index.jsx":"62","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/Index.jsx":"63","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/modal/delete.jsx":"64","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/modal/delete.jsx":"65","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/index.jsx":"66","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/add/Index.jsx":"67","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/edit/Index.jsx":"68","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/list/Index.jsx":"69","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/list/modal/delete.jsx":"70","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/index.jsx":"71","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/add/Index.jsx":"72","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/list/Index.jsx":"73","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/edit/Index.jsx":"74","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/list/modal/delete.jsx":"75","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/index.jsx":"76","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/add/Index.jsx":"77","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/edit/Index.jsx":"78","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/list/Index.jsx":"79","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/list/modal/delete.jsx":"80","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Register/index.jsx":"81","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Register/components/RegisterForm.jsx":"82","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/ProtectedRoute.jsx":"83","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Home/index.jsx":"84","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Home/components/ExampleCard.jsx":"85","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/index.jsx":"86","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/list/Index.jsx":"87","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/list/modal/delete.jsx":"88","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/create/Index.jsx":"89","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/index.jsx":"90","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/add/Index.jsx":"91","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/edit/Index.jsx":"92","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/list/Index.jsx":"93","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/list/modal/delete.jsx":"94","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/components/Data.jsx":"95","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/components/Image.jsx":"96","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/components/Data.jsx":"97","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/components/Image.jsx":"98","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Chat/list/Index.jsx":"99","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Chat/list/modal/delete.jsx":"100"},{"size":497,"mtime":1622776362000,"results":"101","hashOfConfig":"102"},{"size":5301,"mtime":1622776362000,"results":"103","hashOfConfig":"102"},{"size":1321,"mtime":1636823287891,"results":"104","hashOfConfig":"102"},{"size":492,"mtime":1622776362000,"results":"105","hashOfConfig":"102"},{"size":497,"mtime":1622776362000,"results":"106","hashOfConfig":"102"},{"size":190,"mtime":1622776362000,"results":"107","hashOfConfig":"102"},{"size":397,"mtime":1636821896728,"results":"108","hashOfConfig":"102"},{"size":470,"mtime":1622776362000,"results":"109","hashOfConfig":"102"},{"size":387,"mtime":1636821990764,"results":"110","hashOfConfig":"102"},{"size":820,"mtime":1622776362000,"results":"111","hashOfConfig":"102"},{"size":191,"mtime":1622776362000,"results":"112","hashOfConfig":"102"},{"size":224,"mtime":1622776362000,"results":"113","hashOfConfig":"102"},{"size":201,"mtime":1622776362000,"results":"114","hashOfConfig":"102"},{"size":288,"mtime":1622776362000,"results":"115","hashOfConfig":"102"},{"size":1584,"mtime":1622776362000,"results":"116","hashOfConfig":"102"},{"size":2561,"mtime":1622776362000,"results":"117","hashOfConfig":"102"},{"size":1542,"mtime":1636043658698,"results":"118","hashOfConfig":"102"},{"size":913,"mtime":1622776362000,"results":"119","hashOfConfig":"102"},{"size":1380,"mtime":1638355849772,"results":"120","hashOfConfig":"102"},{"size":810,"mtime":1622776362000,"results":"121","hashOfConfig":"102"},{"size":3618,"mtime":1638711220594,"results":"122","hashOfConfig":"102"},{"size":505,"mtime":1622776362000,"results":"123","hashOfConfig":"102"},{"size":1453,"mtime":1636043664734,"results":"124","hashOfConfig":"102"},{"size":959,"mtime":1636043670775,"results":"125","hashOfConfig":"102"},{"size":2160,"mtime":1638711187593,"results":"126","hashOfConfig":"102"},{"size":1519,"mtime":1638546773303,"results":"127","hashOfConfig":"102"},{"size":395,"mtime":1622776362000,"results":"128","hashOfConfig":"102"},{"size":395,"mtime":1622776362000,"results":"129","hashOfConfig":"102"},{"size":4108,"mtime":1638456696141,"results":"130","hashOfConfig":"102"},{"size":417,"mtime":1636043708522,"results":"131","hashOfConfig":"102"},{"size":417,"mtime":1622776362000,"results":"132","hashOfConfig":"102"},{"size":387,"mtime":1637067195085,"results":"133","hashOfConfig":"102"},{"size":385,"mtime":1636817528270,"results":"134","hashOfConfig":"102"},{"size":687,"mtime":1638039333308,"results":"135","hashOfConfig":"102"},{"size":838,"mtime":1638432437484,"results":"136","hashOfConfig":"102"},{"size":366,"mtime":1636990031910,"results":"137","hashOfConfig":"102"},{"size":821,"mtime":1639512655762,"results":"138","hashOfConfig":"102"},{"size":1103,"mtime":1639512830182,"results":"139","hashOfConfig":"102"},{"size":366,"mtime":1636990070895,"results":"140","hashOfConfig":"141"},{"size":376,"mtime":1636990022305,"results":"142","hashOfConfig":"102"},{"size":376,"mtime":1636990064300,"results":"143","hashOfConfig":"141"},{"size":4675,"mtime":1639406583244,"results":"144","hashOfConfig":"102"},{"size":897,"mtime":1637764482756,"results":"145","hashOfConfig":"102"},{"size":631,"mtime":1638095042720,"results":"146","hashOfConfig":"102"},{"size":649,"mtime":1637468295550,"results":"147","hashOfConfig":"102"},{"size":635,"mtime":1637810366589,"results":"148","hashOfConfig":"102"},{"size":3725,"mtime":1638194557172,"results":"149","hashOfConfig":"102"},{"size":5438,"mtime":1639512895778,"results":"150","hashOfConfig":"102"},{"size":3708,"mtime":1638545635395,"results":"151","hashOfConfig":"102"},{"size":4188,"mtime":1638545685068,"results":"152","hashOfConfig":"102"},{"size":3337,"mtime":1638545263279,"results":"153","hashOfConfig":"102"},{"size":2883,"mtime":1638098254861,"results":"154","hashOfConfig":"102"},{"size":2353,"mtime":1637726427663,"results":"155","hashOfConfig":"102"},{"size":3570,"mtime":1638098300261,"results":"156","hashOfConfig":"102"},{"size":655,"mtime":1637762203775,"results":"157","hashOfConfig":"102"},{"size":990,"mtime":1637471039319,"results":"158","hashOfConfig":"102"},{"size":998,"mtime":1637470324244,"results":"159","hashOfConfig":"102"},{"size":1580,"mtime":1638192777569,"results":"160","hashOfConfig":"102"},{"size":4486,"mtime":1639511299414,"results":"161","hashOfConfig":"102"},{"size":631,"mtime":1638160590361,"results":"162","hashOfConfig":"102"},{"size":3413,"mtime":1638193807687,"results":"163","hashOfConfig":"102"},{"size":3981,"mtime":1639512920697,"results":"164","hashOfConfig":"102"},{"size":5177,"mtime":1639504505244,"results":"165","hashOfConfig":"102"},{"size":954,"mtime":1638193533554,"results":"166","hashOfConfig":"102"},{"size":954,"mtime":1638194491140,"results":"167","hashOfConfig":"102"},{"size":643,"mtime":1638328968870,"results":"168","hashOfConfig":"102"},{"size":2582,"mtime":1638355956943,"results":"169","hashOfConfig":"102"},{"size":2908,"mtime":1638356043186,"results":"170","hashOfConfig":"102"},{"size":3577,"mtime":1638332676791,"results":"171","hashOfConfig":"102"},{"size":989,"mtime":1638332597854,"results":"172","hashOfConfig":"102"},{"size":636,"mtime":1638374136293,"results":"173","hashOfConfig":"102"},{"size":2850,"mtime":1638428560341,"results":"174","hashOfConfig":"102"},{"size":3660,"mtime":1638428955573,"results":"175","hashOfConfig":"102"},{"size":3411,"mtime":1638428918232,"results":"176","hashOfConfig":"102"},{"size":993,"mtime":1638429424362,"results":"177","hashOfConfig":"102"},{"size":616,"mtime":1638429451068,"results":"178","hashOfConfig":"102"},{"size":3869,"mtime":1638437047482,"results":"179","hashOfConfig":"102"},{"size":4981,"mtime":1638441812671,"results":"180","hashOfConfig":"102"},{"size":3762,"mtime":1638433251114,"results":"181","hashOfConfig":"102"},{"size":998,"mtime":1638433215256,"results":"182","hashOfConfig":"102"},{"size":1526,"mtime":1638450091136,"results":"183","hashOfConfig":"102"},{"size":5548,"mtime":1638452915685,"results":"184","hashOfConfig":"102"},{"size":492,"mtime":1638453333007,"results":"185","hashOfConfig":"102"},{"size":374,"mtime":1638453296919,"results":"186","hashOfConfig":"102"},{"size":417,"mtime":1638453277680,"results":"187","hashOfConfig":"102"},{"size":740,"mtime":1640279478899,"results":"188","hashOfConfig":"102"},{"size":3601,"mtime":1640275187911,"results":"189","hashOfConfig":"102"},{"size":961,"mtime":1640275164336,"results":"190","hashOfConfig":"102"},{"size":4653,"mtime":1640279246657,"results":"191","hashOfConfig":"102"},{"size":623,"mtime":1638711213464,"results":"192","hashOfConfig":"102"},{"size":3634,"mtime":1638985832651,"results":"193","hashOfConfig":"102"},{"size":5448,"mtime":1640248869069,"results":"194","hashOfConfig":"102"},{"size":3701,"mtime":1639241799146,"results":"195","hashOfConfig":"102"},{"size":926,"mtime":1639241785580,"results":"196","hashOfConfig":"102"},{"size":3918,"mtime":1639504642810,"results":"197","hashOfConfig":"102"},{"size":6052,"mtime":1640190170514,"results":"198","hashOfConfig":"102"},{"size":6010,"mtime":1639512379993,"results":"199","hashOfConfig":"102"},{"size":6100,"mtime":1640190594799,"results":"200","hashOfConfig":"102"},{"size":3025,"mtime":1640279696478,"results":"201","hashOfConfig":"102"},{"size":961,"mtime":1640279449877,"results":"202","hashOfConfig":"102"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},"1o17xjo",{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"205"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"205"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"205"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"205"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"205"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o9snns",{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"205"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"205"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"205"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"205"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"205"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"205"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"205"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"205"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"205"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"205"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"205"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"205"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"205"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"205"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"205"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"205"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"205"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"205"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"205"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"205"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"205"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"205"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"205"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"205"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"205"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"205"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"205"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mznaufalmaulana/Projects/yonny-admin/src/index.js",[],["440","441"],"/Users/mznaufalmaulana/Projects/yonny-admin/src/serviceWorker.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/App.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/store.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/ScrollToTop.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/index.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/themeReducer.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/sidebarReducer.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/reducers/rtlReducer.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/MainWrapper.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/themeActions.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/sidebarActions.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/redux/actions/rtlActions.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/prop-types/ReducerProps.js",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/form/CheckBox.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/Sidebar.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/Topbar.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarProfile.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarSidebarButton.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarContent.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/topbar/TopbarMenuLink.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarCategory.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/sidebar/SidebarLink.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/Router.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/LogIn/index.jsx",["442","443","444"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FacebookIcon from \"mdi-react/FacebookIcon\";\nimport GooglePlusIcon from \"mdi-react/GooglePlusIcon\";\nimport LogInForm from \"./components/LogInForm\";\n\nconst LogIn = () => (\n  <div className=\"account\">\n    <div className=\"account__wrapper\">\n      <div className=\"account__card\">\n        <div className=\"account__head\">\n          <h3 className=\"account__title\">\n            Welcome to\n            <span className=\"account__logo\">\n              {\" \"}\n              BATU\n              <span className=\"account__logo-accent\">YONNY</span>\n            </span>\n          </h3>\n          <h4 className=\"account__subhead subhead\">\n            Start your business easily\n          </h4>\n        </div>\n        <LogInForm onSubmit />\n        {/* <div className=\"account__or\">\n          <p>Or Easily Using</p>\n        </div>\n        <div className=\"account__social\">\n          <Link\n            className=\"account__social-btn account__social-btn--facebook\"\n            to=\"/pages/one\"\n          >\n            <FacebookIcon />\n          </Link>\n          <Link\n            className=\"account__social-btn account__social-btn--google\"\n            to=\"/pages/one\"\n          >\n            <GooglePlusIcon />\n          </Link>\n        </div> */}\n      </div>\n    </div>\n  </div>\n);\n\nexport default LogIn;\n\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\n// four lines in /scss/components/form.scss to add styles\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Example/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/ExampleTwo/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/LogIn/components/LogInForm.jsx",["445","446","447"],"import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport EyeIcon from \"mdi-react/EyeIcon\";\nimport KeyVariantIcon from \"mdi-react/KeyVariantIcon\";\nimport AccountOutlineIcon from \"mdi-react/AccountOutlineIcon\";\nimport renderCheckBoxField from \"../../../shared/components/form/CheckBox\";\nimport API from \"../../../services\";\nimport { Button } from \"reactstrap\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nconst LogInForm = ({ handleSubmit }) => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [error, setError] = useState({ email: \"\", password: \"\" });\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  useEffect(() => {\n    localStorage.clear();\n  });\n\n  const showPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const make = () => {\n    let payload = JSON.stringify({\n      email: email,\n      password: pass,\n    });\n    login(payload);\n  };\n\n  const login = (payload) => {\n    API.post(`login`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      localStorage.setItem(\"token\", result.token);\n      window.window.location.href = \"/home\";\n    } else if (result.status === 500) {\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    } else {\n      setError({\n        ...error,\n        email: result.data.email,\n        password: result.data.password,\n      });\n    }\n  };\n\n  return (\n    <>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Email</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <AccountOutlineIcon />\n            </div>\n            <Field\n              name=\"name\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <span className=\"text-danger\">{error.email}</span>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Password</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <KeyVariantIcon />\n            </div>\n            <Field\n              name=\"password\"\n              component=\"input\"\n              type={isPasswordShown ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              onChange={(e) => setPass(e.target.value)}\n            />\n            <button\n              className={`form__form-group-button${\n                isPasswordShown ? \" active\" : \"\"\n              }`}\n              onClick={() => showPassword()}\n              type=\"button\"\n            >\n              <EyeIcon />\n            </button>\n          </div>\n          <span className=\"text-danger\">{error.password}</span>\n          <div className=\"account__forgot-password\">\n            <a href=\"/\">Forgot a password?</a>\n          </div>\n        </div>\n        <Button\n          className=\"btn btn-primary account__btn account__btn--small text-white\"\n          onClick={make}\n        >\n          Sign In\n        </Button>\n        <Link\n          className=\"btn btn-outline-primary account__btn account__btn--small\"\n          to=\"/register\"\n        >\n          Create Account\n        </Link>\n      </form>\n    </>\n  );\n};\n\nLogInForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: \"log_in_form\",\n})(LogInForm);\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Example/components/ExampleCard.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/ExampleTwo/components/ExampleCard.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/add/index.jsx",[],["448","449"],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/InputComponent.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/SelectComponent.jsx",["450"],"import React, { useState, useEffect } from \"react\";\nimport { Col, FormGroup, Input, Label } from \"reactstrap\";\n\nfunction SelectComponent(props) {\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    setValue(e.target.value);\n  }\n\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <Input\n          name=\"select\"\n          type=\"select\"\n          defaultValue={0}\n          onChange={(e) => onChangeValue(e)}\n        >\n          <option value={0}>{props.placeholder}</option>\n          {props.data.map((item) => (\n            <option value={item.value}>{item.label}</option>\n          ))}\n        </Input>\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\nexport default SelectComponent;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/add/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/MultipleSelectComponent.jsx",["451"],"import React, { useState, useEffect } from \"react\";\nimport { Col, FormGroup, Label } from \"reactstrap\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\n\nfunction MultipleSelectComponent(props) {\n  const animatedComponents = makeAnimated();\n  const [value, setValue] = useState(0);\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    setValue(e);\n  }\n\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <Select\n          closeMenuOnSelect={false}\n          components={animatedComponents}\n          onChange={onChangeValue}\n          isMulti\n          options={props.data}\n        />\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\nexport default MultipleSelectComponent;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/InputFileComponent.jsx",["452","453"],"import React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, FormText, Input, Label } from \"reactstrap\";\nrequire(\"../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction InputFileComponent(props) {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    props.onChangeValue(value);\n  }, [value]);\n\n  function onChangeValue(e) {\n    console.log(e);\n    setValue(e.target.files);\n  }\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={2}>\n        <div className=\"mr-2\" style={styles}>\n          <label className=\"custom-file-upload w-100\">\n            <input\n              type=\"file\"\n              id=\"file1\"\n              onChange={onChangeValue}\n              accept=\"image/*\"\n              multiple\n            />\n            Choose\n          </label>\n        </div>\n        <FormText>{props?.caption}</FormText>\n        {value && <FormText>{value.length} File(s) Selected</FormText>}\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\n\nexport default InputFileComponent;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/add/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/services/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/SnackbarComponent.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/Index.jsx",["454"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProduct = () => {\n    API.deleteData(`product/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.project_name} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Product Name\",\n      cell: (row) => row.product_name,\n    },\n    {\n      name: \"Type\",\n      cell: (row) => row.type_name,\n    },\n    {\n      name: \"Category Product\",\n      cell: (row) =>\n        row.product_category.map((item) => (\n          <span className=\"badge badge-pill badge-warning p-2 mr-1\">\n            {item.category_name}\n          </span>\n        )),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/product/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProduct}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">List Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/product/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Memuat Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/add/Index.jsx",["455"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport MultipleSelectComponent from \"../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../Layout/components/TextEditorComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [files, setFiles] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: `${\n              item.category_parent ? item.category_parent + \" - \" : \"\"\n            }${item.category_name}`,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = new FormData();\n    let cat = [];\n    let file = [];\n    category.map((item) => cat.push(item.value));\n    payload.append(\"product_type_id\", type);\n    payload.append(\"product_name\", productName);\n    payload.append(\"description\", desc);\n    payload.append(\"product_category_id[]\", cat);\n    payload.append(\"product_photo[]\", \"\");\n    payload.append(\"is_active\", 1);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`product/store`, payload, \"POST\");\n    uploadImage(resp.data.product_id);\n  };\n\n  const uploadImage = async (id) => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i]);\n        resp = await API.uploadFile(\n          `product/${id}/store-product-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Product</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Product Name\"\n              type=\"text\"\n              placeholder=\"Input the Category Name\"\n              onChangeValue={(val) => setProductName(val)}\n            />\n\n            <TextEditorComponent\n              label=\"Description\"\n              onChangeValue={(val) => setDesc(val)}\n            />\n\n            <SelectComponent\n              label=\"Type\"\n              placeholder={\"Select Type of Product\"}\n              data={listType}\n              onChangeValue={(val) => setType(val)}\n            />\n\n            <MultipleSelectComponent\n              label=\"Category Product\"\n              data={listCategory}\n              onChangeValue={(val) => setCategory(val)}\n            />\n\n            <InputFileComponent\n              label=\"Photo Product\"\n              onChangeValue={(val) => setFiles(val)}\n              caption=\"Choose Max. 5 Files\"\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/Index.jsx",["456","457"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [dataModal, setDataModal] = useState(\"\");\n  const [openModalDelete, setOpenModalDelete] = useState(\n    dataModal ? true : false\n  );\n\n  const deleteCategory = () => {\n    API.deleteData(`product-category/${dataModal.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert(true);\n        setMessage(`${dataModal.category_name} was deleted`);\n        setOpenModalDelete(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Category Product Name\",\n      cell: (row) => row.category_name,\n    },\n    {\n      name: \"Parent Category\",\n      cell: (row) => (row.category_parent ? row.category_parent : \"-\"),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/product/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => (setOpenModalDelete(true), setDataModal(row))}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={openModalDelete}\n          data={dataModal}\n          onHide={() => setOpenModalDelete(false)}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert}\n          message={message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">List Data</h5>\n                  <h5 className=\"subhead\">Example subhead</h5>\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/product/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              // paginationServer\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/edit/Index.jsx",["458","459","460","461","462"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Edit(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [listParent, setListParent] = useState([]);\n  const [categoryParent, setCategoryParent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  function onChangeCategoryParent(val) {\n    setCategoryParent(val);\n  }\n\n  function onChangeCategory(val) {\n    setCategory(val);\n  }\n\n  function save() {\n    let payload = JSON.stringify({\n      category_name: category,\n      category_parent: categoryParent,\n    });\n    setIsLoading(true);\n    API.put(`product-category/${id}/update`, payload).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(\"Data Saved\");\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(result.message);\n      }\n    });\n  }\n\n  useEffect(() => {\n    API.get(`product-category/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setCategory(result.data[0].category_name);\n        setCategoryParent(result.data[0].category_parent);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    API.get(`product-category/list-parent`).then((result) => {\n      if (result.message === \"success\") {\n        setListParent(result.data);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Master Product</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <SnackbarComponent\n            openAlert={alert}\n            message={message}\n            onHide={() => setAlert(false)}\n          />\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Category Parent</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"category_parent\"\n                  type=\"select\"\n                  value={categoryParent}\n                  onChange={(e) => {\n                    setCategoryParent(e.target.value);\n                  }}\n                >\n                  <option value={0}>Nothing Parent Category</option>\n                  {listParent.map((data) => (\n                    <option value={data.id}>{data.category_name}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Category Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"category_name\"\n                  placeholder=\"Input the Category Name\"\n                  type=\"text\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Edit;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/add/Index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/edit/Index.jsx",["463","464","465"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index(props) {\n  const [type, setType] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  function onChangeType(val) {\n    setType(val);\n  }\n\n  function save() {\n    let payload = JSON.stringify({ type_name: type });\n    setIsLoading(true);\n    API.put(`product-type/${id}/update`, payload).then((result) => {\n      if (result.message === \"success\") {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(\"Data Saved\");\n        document.getElementById(\"form\").reset();\n      } else {\n        setIsLoading(false);\n        setAlert(true);\n        setMessage(result.message);\n      }\n    });\n  }\n\n  useEffect(() => {\n    API.get(`product-type/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setType(result.data[0].type_name);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert}\n        message={message}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Type</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"type_name\"\n                  placeholder=\"Input the Type Name\"\n                  type=\"text\"\n                  value={type}\n                  onChange={(e) => setType(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/add/Index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/list/Index.jsx",["466","467"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [data, setData] = useState(\"\");\n  const [dataModal, setDataModal] = useState(\"\");\n  const [openModalDelete, setOpenModalDelete] = useState(\n    dataModal ? true : false\n  );\n\n  const deleteCategory = () => {\n    API.deleteData(`product-type/${dataModal.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert(true);\n        setMessage(`${dataModal.type_name} was deleted`);\n        setOpenModalDelete(false);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Category Product Name\",\n      cell: (row) => row.type_name,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/type/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => (setOpenModalDelete(true), setDataModal(row))}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={openModalDelete}\n          data={dataModal}\n          onHide={() => setOpenModalDelete(false)}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert}\n          message={message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">List Data</h5>\n                  <h5 className=\"subhead\">Example subhead</h5>\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/type/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              // paginationServer\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Layout/components/TextEditorComponent.jsx",["468"],"import React, { useEffect, useState } from \"react\";\nimport { Col, FormGroup, Label } from \"reactstrap\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\n\nfunction TextEditorComponent(props) {\n  const [value, setValue] = useState();\n  useEffect(() => props.onChangeValue(value), []);\n\n  function onChangeValue(val) {\n    setValue(val);\n    props.onChangeValue(val);\n  }\n  const Index = (\n    <FormGroup row>\n      <Label sm={2}>{props.label}</Label>\n      <Col sm={10}>\n        <TextEditorTwo onChange={(val) => onChangeValue(val)} />\n      </Col>\n    </FormGroup>\n  );\n\n  return Index;\n}\n\nexport default TextEditorComponent;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterType/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/MasterProduct/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/shared/components/text-editor/TextEditor.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/Index.jsx",["469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Spinner,\n  TabContent,\n  TabPane,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\nimport FormData from \"../../../containers/Product/edit/components/Data\";\nimport ImageData from \"../../../containers/Product/edit/components/Image\";\nimport classnames from \"classnames\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const animatedComponents = makeAnimated();\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.category_name,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n    API.get(`product/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n    console.log(data);\n  }, []);\n\n  const makePayload = () => {\n    let cat = [];\n    category.map((item) => cat.push(item.value));\n    let payload = JSON.stringify({\n      product_type_id: data.type_id,\n      product_name: data.product_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      product_category_id: cat,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.put(`product/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Product</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"tabs\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"1\" })}\n                  onClick={() => toggle(\"1\")}\n                >\n                  Data\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"2\" })}\n                  onClick={() => toggle(\"2\")}\n                >\n                  Media\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <FormData />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ImageData />\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/Index.jsx",["484"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`project/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`project/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.project_name} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Project Name\",\n      cell: (row) => row.project_name,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/project/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">List Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/project/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Memuat Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/add/Index.jsx",["485","486","487","488","489"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport MultipleSelectComponent from \"../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../Layout/components/TextEditorComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport axios from \"axios\";\nimport FileBase64 from \"react-file-base64\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const makePayload = () => {\n    let payload = new FormData();\n    payload.append(\"project_name\", projectName);\n    payload.append(\"description\", desc);\n    payload.append(\"project_photo[]\", \"\");\n    payload.append(\"is_active\", 1);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`project/store`, payload, \"POST\");\n    uploadImage(resp.data.project_id);\n  };\n\n  const uploadImage = async (id) => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i]);\n        resp = await API.uploadFile(\n          `project/${id}/store-project-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Project</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Project Name\"\n              type=\"text\"\n              placeholder=\"Input the Project Name\"\n              onChangeValue={(val) => setProjectName(val)}\n            />\n\n            <TextEditorComponent\n              label=\"Description\"\n              onChangeValue={(val) => setDesc(val)}\n            />\n\n            <InputFileComponent\n              label=\"Photo Project\"\n              onChangeValue={(val) => setFiles(val)}\n              caption=\"Choose Max. 3 Files\"\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/Index.jsx",["490","491","492","493","494","495","496","497","498","499","500","501"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Spinner,\n  TabContent,\n  TabPane,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport TextEditorTwo from \"../../../shared/components/text-editor/TextEditor\";\nimport FormData from \"../../../containers/Project/edit/components/Data\";\nimport ImageData from \"../../../containers/Project/edit/components/Image\";\nimport classnames from \"classnames\";\n\nrequire(\"../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  const [activeTab, setActiveTab] = useState(\"1\");\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  useEffect(() => {\n    API.get(`project/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n    API.get(`project/${id}/project-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        result.data.map((item) =>\n          photo.push({\n            id: item.id,\n            photo_name: `${API.urlStorage}${item.photo_name}`,\n          })\n        );\n        setDataFile(photo);\n      }\n      console.log(dataFile);\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      project_name: data.project_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.put(`project/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n\n    console.log(files);\n  };\n\n  const uploadImage = async () => {\n    try {\n      let resp = \"\";\n      for (let i = 0; i < files.length; i++) {\n        let payload = new FormData();\n        payload.append(\"photo\", files[i].photo_name);\n        resp = await API.uploadFile(\n          `project/${files[i].id}/update-project-photo`,\n          payload,\n          \"POST\"\n        );\n      }\n      handleMessage(resp);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Project</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <div className=\"tabs\">\n            <Nav tabs>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"1\" })}\n                  onClick={() => toggle(\"1\")}\n                >\n                  Data\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink\n                  className={classnames({ active: activeTab === \"2\" })}\n                  onClick={() => toggle(\"2\")}\n                >\n                  Media\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <FormData />\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <ImageData />\n            </TabPane>\n          </TabContent>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/add/Index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/edit/Index.jsx",["502","503","504"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const { id } = useParams();\n\n  const save = async () => {\n    let payload = JSON.stringify({ region: region });\n    setIsLoading(true);\n    await API.put(`region/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`region/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setRegion(result.data[0].region);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Region</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type Name</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"region_name\"\n                  placeholder=\"Input the Region Name\"\n                  type=\"text\"\n                  value={region}\n                  onChange={(e) => setRegion(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={save}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/list/Index.jsx",["505"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`region/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.region} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false, data: \"\", status: \"error\" });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Category Product Name\",\n      cell: (row) => row.region,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/master/region/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">List Data</h5>\n                  <h5 className=\"subhead\">Example subhead</h5>\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/master/region/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Region/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/add/Index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/list/Index.jsx",["506"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`social-media/${deleteData.data.id}/delete`).then(\n      (result) => {\n        if (result.message === \"success\") {\n          setAlert({\n            open: true,\n            message: `${deleteData.data.link} was deleted`,\n            status: \"success\",\n          });\n          setDeleteData({ open: false, data: \"\", status: \"error\" });\n        }\n      }\n    );\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`social-media/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Link\",\n      cell: (row) => row.link,\n    },\n    {\n      name: \"Icon\",\n      cell: (row) => row.icon,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/social-media/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">List Data</h5>\n                  <h5 className=\"subhead\">Example subhead</h5>\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/social-media/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/edit/Index.jsx",["507"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [link, setLink] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      icon: icon,\n      link: link,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.put(`social-media/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`social-media/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setLink(result.data[0].link);\n        setIcon(result.data[0].icon);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert(false)}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Region</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Icon Name</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Icon Name\"\n                  type=\"text\"\n                  value={icon}\n                  onChange={(e) => setIcon(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Link Social Media</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Link\"\n                  type=\"text\"\n                  value={link}\n                  onChange={(e) => setLink(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/SocialMedia/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/add/Index.jsx",["508","509","510"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [listRegion, setListRegion] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  useEffect(() => {\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.region,\n          })\n        );\n        setListRegion(list);\n      }\n    });\n    console.log(listRegion);\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      region_id: region,\n      address: address,\n      phone: phone,\n      email: email,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.post(`contact/store`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data Contact</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <SelectComponent\n              label=\"Type\"\n              placeholder={\"Select\"}\n              data={listRegion}\n              onChangeValue={(val) => setRegion(val)}\n            />\n            <InputComponent\n              label=\"Address\"\n              type=\"textarea\"\n              placeholder=\"Input the Address\"\n              onChangeValue={(val) => setAddress(val)}\n            />\n            <InputComponent\n              label=\"Phone\"\n              type=\"text\"\n              placeholder=\"Input the Phone\"\n              onChangeValue={(val) => setPhone(val)}\n            />\n            <InputComponent\n              label=\"Email\"\n              type=\"email\"\n              placeholder=\"Input the Email\"\n              onChangeValue={(val) => setEmail(val)}\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/edit/Index.jsx",["511","512"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [region, setRegion] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [listRegion, setListRegion] = useState([]);\n  const [alert, setAlert] = useState({\n    open: true,\n    message: \"\",\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`region/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.region,\n          })\n        );\n        setListRegion(list);\n      }\n    });\n    console.log(listRegion);\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      region_id: region,\n      address: address,\n      phone: phone,\n      email: email,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    await API.put(`contact/${id}/update`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      setIsLoading(false);\n      setAlert({ open: true, message: \"Data was Added\", status: \"success\" });\n      document.getElementById(\"form\").reset();\n    } else {\n      setIsLoading(false);\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    }\n  };\n\n  useEffect(() => {\n    API.get(`contact/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setRegion(result.data[0].region_id);\n        setAddress(result.data[0].address);\n        setEmail(result.data[0].email);\n        setPhone(result.data[0].phone);\n      }\n    });\n  }, []);\n\n  const Index = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Region</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Type</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"select\"\n                  type=\"select\"\n                  value={region}\n                  onChange={(e) => setRegion(e.target.value)}\n                >\n                  <option value={0}>Select</option>\n                  {listRegion.map((item) => (\n                    <option value={item.value}>{item.label}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Address</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Address\"\n                  type=\"textarea\"\n                  value={address}\n                  onChange={(e) => setAddress(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Phone</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Phone\"\n                  type=\"text\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Label sm={2}>Email</Label>\n              <Col sm={10}>\n                <Input\n                  placeholder=\"Input the Email\"\n                  type=\"email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading ? (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                ) : null}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return Index;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/list/Index.jsx",["513"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport API from \"../../../services\";\nimport ModalDelete from \"./modal/delete\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction List() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n\n  const deleteCategory = () => {\n    API.deleteData(`contact/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `Contact ${deleteData.data.region} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false, data: \"\", status: \"error\" });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`contact/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Region\",\n      cell: (row) => row.region,\n    },\n    {\n      name: \"Address\",\n      cell: (row) => row.address,\n    },\n    {\n      name: \"Phone\",\n      cell: (row) => row.phone,\n    },\n    {\n      name: \"Email\",\n      cell: (row) => row.email,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/contact/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const index = (\n    <>\n      <Col md={12}>\n        <ModalDelete\n          open={deleteData.open}\n          data={deleteData.data}\n          onHide={() => setDeleteData({ ...deleteData, open: false })}\n          onDeleted={() => deleteCategory()}\n        />\n        <SnackbarComponent\n          openAlert={alert.open}\n          message={alert.message}\n          onHide={() => setAlert(false)}\n        />\n        <Card>\n          <CardBody>\n            <Row>\n              <Col>\n                <div className=\"card__title\">\n                  <h5 className=\"bold-text\">List Data</h5>\n                  <h5 className=\"subhead\">Example subhead</h5>\n                </div>\n              </Col>\n              <Col>\n                <NavLink to=\"/contact/add\">\n                  <Button className=\"btn btn-primary text-white float-right\">\n                    + Add Data\n                  </Button>\n                </NavLink>\n              </Col>\n            </Row>\n            <DataTable\n              columns={cols}\n              data={data}\n              pagination\n              paginationTotalRows={data.length}\n              paginationPerPage={10}\n              highlightOnHover\n              progressPending={isLoading}\n              paginationComponentOptions={{\n                noRowsPerPage: true,\n              }}\n              progressComponent={\n                <div className=\"text-center p-5\">\n                  <p>Memuat Data</p>\n                  <Spinner animation=\"border\" size=\"lg\" />\n                </div>\n              }\n            />\n          </CardBody>\n        </Card>\n      </Col>\n    </>\n  );\n\n  return index;\n}\n\nexport default List;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Contact/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Register/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Register/components/RegisterForm.jsx",["514","515","516","517"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport EyeIcon from \"mdi-react/EyeIcon\";\nimport KeyVariantIcon from \"mdi-react/KeyVariantIcon\";\nimport AccountOutlineIcon from \"mdi-react/AccountOutlineIcon\";\nimport MailIcon from \"mdi-react/MailIcon\";\nimport renderCheckBoxField from \"../../../shared/components/form/CheckBox\";\nimport API from \"../../../services\";\nimport { Button } from \"reactstrap\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nconst RegisterForm = ({ handleSubmit }) => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [passConfirmation, setPassConfirmation] = useState(\"\");\n  const [uname, setUname] = useState(\"\");\n  const [error, setError] = useState({ email: \"\", password: \"\" });\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n\n  const showPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n\n  const make = () => {\n    let payload = JSON.stringify({\n      username: uname,\n      email: email,\n      password: pass,\n      password_confirmation: passConfirmation,\n    });\n    login(payload);\n  };\n\n  const login = (payload) => {\n    API.post(`register`, payload).then((result) => {\n      handleMessage(result);\n    });\n  };\n\n  const handleMessage = (result) => {\n    if (result.message === \"success\") {\n      window.window.location.href = \"/log_in\";\n    } else if (result.status === 500) {\n      setAlert({ open: true, message: result.message, status: \"error\" });\n    } else {\n      setError({\n        ...error,\n        email: result.data.email,\n        password: result.data.password,\n      });\n    }\n  };\n\n  return (\n    <>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        status={alert.status}\n        onHide={() => setAlert({ ...alert, open: false })}\n      />\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Username</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <AccountOutlineIcon />\n            </div>\n            <Field\n              name=\"username\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => setUname(e.target.value)}\n            />\n          </div>\n          <span className=\"text-danger\">{error.email}</span>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Email</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <MailIcon />\n            </div>\n            <Field\n              name=\"email\"\n              component=\"input\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <span className=\"text-danger\">{error.email}</span>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Password</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <KeyVariantIcon />\n            </div>\n            <Field\n              name=\"password\"\n              component=\"input\"\n              type={isPasswordShown ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              onChange={(e) => setPass(e.target.value)}\n            />\n            {/* <button\n              className={`form__form-group-button${\n                isPasswordShown ? \" active\" : \"\"\n              }`}\n              onClick={() => showPassword()}\n              type=\"button\"\n            >\n              <EyeIcon />\n            </button> */}\n          </div>\n          <span className=\"text-danger\">{error.password}</span>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Repeat Password</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <KeyVariantIcon />\n            </div>\n            <Field\n              name=\"password\"\n              component=\"input\"\n              type={isPasswordShown ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              onChange={(e) => setPassConfirmation(e.target.value)}\n            />\n            {/* <button\n              className={`form__form-group-button${\n                isPasswordShown ? \" active\" : \"\"\n              }`}\n              onClick={() => showPassword()}\n              type=\"button\"\n            >\n              <EyeIcon />\n            </button> */}\n          </div>\n          <span className=\"text-danger\">{error.password}</span>\n        </div>\n        <Button\n          className=\"btn btn-primary account__btn account__btn--small text-white\"\n          onClick={make}\n        >\n          Create Account\n        </Button>\n        <Link\n          className=\"btn btn-outline-primary account__btn account__btn--small\"\n          to=\"/log_in\"\n        >\n          Log In\n        </Link>\n      </form>\n    </>\n  );\n};\n\nRegisterForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: \"register_form\",\n})(RegisterForm);\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/App/ProtectedRoute.jsx",["518","519"],"import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { Col, Row } from \"reactstrap\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (localStorage.getItem(\"token\")) {\n          const page = <Component {...props} />;\n          return page;\n        } else {\n          return <Redirect to=\"/log_in\" />;\n        }\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Home/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Home/components/ExampleCard.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/list/Index.jsx",["520"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`email/list`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`email/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.email_address} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Email Address\",\n      cell: (row) => row.email_address,\n    },\n    {\n      name: \"Type\",\n      cell: (row) =>\n        row.is_subscribe ? (\n          <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n            Subscriber\n          </span>\n        ) : (\n          <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n            Non Subscriber\n          </span>\n        ),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">List Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/email/create\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Create Email\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Memuat Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Subscriber/create/Index.jsx",["521"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport SelectComponent from \"../../../Layout/components/SelectComponent\";\nimport MultipleSelectComponent from \"../../../Layout/components/MultipleSelectComponent\";\nimport InputFileComponent from \"../../../Layout/components/InputFileComponent\";\nimport TextEditorComponent from \"../../../Layout/components/TextEditorComponent\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [listEmail, setListEmail] = useState(\"\");\n  const [emails, setEmails] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [isPromo, setIsPromo] = useState(\"\");\n  const [promoId, setPromoId] = useState(\"\");\n  const [listPromo, setListPromo] = useState([]);\n  const type = [\n    { value: 1, label: \"Blast Promo\" },\n    { value: 2, label: \"Broadcast\" },\n  ];\n\n  useEffect(() => {\n    API.get(`email/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.email_address,\n          })\n        );\n        setListEmail(list);\n      }\n    });\n    API.get(`promo/list/all`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.link,\n          })\n        );\n        setListPromo(list);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let email_id_list = [];\n    emails.map((item) => email_id_list.push(item.value));\n    let payload = JSON.stringify({\n      promo_id: isPromo === \"2\" ? \"\" : promoId,\n      is_promo: isPromo === \"1\" ? 1 : 0,\n      broadcast_message: isPromo === \"2\" ? desc : \"\",\n      email_id_list: email_id_list,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.post(`email/broadcast`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Email was Sent\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Create Email</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <MultipleSelectComponent\n              label=\"To\"\n              data={listEmail}\n              onChangeValue={(val) => setEmails(val)}\n            />\n\n            <SelectComponent\n              label=\"Type\"\n              placeholder=\"Select Type\"\n              data={type}\n              onChangeValue={(val) => setIsPromo(val)}\n            />\n\n            {isPromo === \"2\" && (\n              <TextEditorComponent\n                label=\"Message\"\n                onChangeValue={(val) => setDesc(val)}\n              />\n            )}\n\n            {isPromo === \"1\" && (\n              <SelectComponent\n                label=\"Promo\"\n                placeholder=\"Select Promo\"\n                data={listPromo}\n                onChangeValue={(val) => setPromoId(val)}\n              />\n            )}\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Send\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/index.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/add/Index.jsx",["522"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport InputComponent from \"../../Layout/components/InputComponent\";\nimport InputFileComponent from \"../../Layout/components/InputFileComponent\";\nimport SelectComponent from \"../../Layout/components/SelectComponent\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [files, setFiles] = useState(\"\");\n  const [order, setOrder] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [isHeadline, setIsHeadline] = useState(\"\");\n  const type = [\n    { value: 0, label: \"Non Headline\" },\n    { value: 1, label: \"Headline\" },\n  ];\n\n  const makePayload = () => {\n    let payload = new FormData();\n    payload.append(\"order\", order);\n    payload.append(\"link\", link);\n    payload.append(\"photo_name\", files[0]);\n    payload.append(\"is_headline\", isHeadline);\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`promo/store`, payload, \"POST\");\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Add Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <InputComponent\n              label=\"Order\"\n              type=\"text\"\n              placeholder=\"Input the Promo's Order\"\n              onChangeValue={(val) => setOrder(val)}\n            />\n\n            <InputComponent\n              label=\"Link\"\n              type=\"text\"\n              placeholder=\"Input the Promo's Link\"\n              onChangeValue={(val) => setLink(val)}\n            />\n\n            <SelectComponent\n              label=\"Type\"\n              placeholder=\"Select Type\"\n              data={type}\n              onChangeValue={(val) => setIsHeadline(val)}\n            />\n\n            <InputFileComponent\n              label=\"Photo Project\"\n              onChangeValue={(val) => setFiles(val)}\n            />\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/edit/Index.jsx",["523"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [preview, setPreview] = useState();\n  const { id } = useParams();\n  const type = [\n    { value: 0, label: \"Non Headline\" },\n    { value: 1, label: \"Headline\" },\n  ];\n\n  useEffect(() => {\n    API.get(`promo/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        console.log(result);\n        setData(result.data[0]);\n      }\n    });\n    console.log(data);\n  }, []);\n\n  const makePayload = () => {\n    console.log(data.photo_name);\n    let payload = new FormData();\n    payload.append(\"order\", data.order);\n    payload.append(\"link\", data.link);\n    payload.append(\"is_headline\", data.is_headline);\n\n    if (data.photo_name instanceof File) {\n      payload.append(\"photo_name\", data.photo_name);\n    }\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.uploadFile(`promo/${id}/update`, payload, \"POST\");\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const changeFile = (e) => {\n    setData({ ...data, photo_name: e.target.files[0] });\n    setPreview(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">Edit Data Project</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <Form id=\"form\">\n            <FormGroup row>\n              <Label sm={2}>Order</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"text\"\n                  placeholder=\"Input the Order\"\n                  type=\"text\"\n                  value={data?.order}\n                  onChange={(e) => setData({ ...data, order: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Link</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"text\"\n                  placeholder=\"Input the Link\"\n                  type=\"text\"\n                  value={data?.link}\n                  onChange={(e) => setData({ ...data, link: e.target.value })}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Type</Label>\n              <Col sm={10}>\n                <Input\n                  name=\"select\"\n                  type=\"select\"\n                  value={data?.is_headline}\n                  onChange={(e) =>\n                    setData({ ...data, is_headline: e.target.value })\n                  }\n                >\n                  <option value={-1}>Select Type</option>\n                  {type.map((item) => (\n                    <option value={item.value}>{item.label}</option>\n                  ))}\n                </Input>\n              </Col>\n            </FormGroup>\n\n            <FormGroup row>\n              <Label sm={2}>Image</Label>\n              <Col sm={10}>\n                <img\n                  className=\"w-50 mb-2\"\n                  src={\n                    preview ? preview : `${API.urlStorage}${data?.photo_name}`\n                  }\n                  alt={data?.link}\n                />\n                <div>\n                  <label className=\"custom-file-upload text-center\">\n                    <input\n                      type=\"file\"\n                      id=\"file1\"\n                      onChange={(e) => changeFile(e)}\n                      accept=\"image/*\"\n                    />\n                    {data?.photo_name ? <>Edit</> : <>Add</>}\n                  </label>\n                </div>\n              </Col>\n            </FormGroup>\n          </Form>\n          <FormGroup row>\n            <Col\n              sm={{\n                offset: 2,\n                size: 10,\n              }}\n            >\n              <Button\n                className=\"btn btn-primary text-white\"\n                onClick={makePayload}\n                disabled={isLoading}\n              >\n                Save\n                {isLoading && (\n                  <>\n                    &nbsp; <Spinner size=\"sm\" />{\" \"}\n                  </>\n                )}\n              </Button>\n            </Col>\n          </FormGroup>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/list/Index.jsx",["524"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../services\";\nimport SnackbarComponent from \"../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`promo/list/all`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`promo/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `Promo was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Link\",\n      cell: (row) => row.link,\n    },\n    {\n      name: \"Type\",\n      cell: (row) =>\n        row.is_headline ? (\n          <span className=\"badge badge-pill badge-info p-2 px-4 mr-1\">\n            Headline\n          </span>\n        ) : (\n          <span className=\"badge badge-pill badge-warning p-2 px-4 mr-1\">\n            Non Headline\n          </span>\n        ),\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <NavLink\n            to={`/promo/edit/${row.id}`}\n            className=\"btn-sm btn-primary mr-1\"\n          >\n            Edit\n          </NavLink>\n\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">List Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n            <Col>\n              <NavLink to=\"/promo/add\">\n                <Button className=\"btn btn-primary text-white float-right\">\n                  + Add Data\n                </Button>\n              </NavLink>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Memuat Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Promo/list/modal/delete.jsx",[],"/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/components/Data.jsx",["525"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport TextEditorTwo from \"../../../../shared/components/text-editor/TextEditor\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`project/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n  }, []);\n\n  const makePayload = () => {\n    let payload = JSON.stringify({\n      project_name: data.project_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.post(`project/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Project Name</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Product's Name\"\n              type=\"text\"\n              value={data?.project_name}\n              onChange={(e) =>\n                setData({ ...data, project_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Description</Label>\n          <Col sm={10}>\n            <TextEditorTwo\n              onChange={(val) => setData({ ...data, description: val })}\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Share Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Share Count\"\n              type=\"text\"\n              value={data?.share_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Seen Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Seen Count\"\n              type=\"text\"\n              value={data?.seen_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={makePayload}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Project/edit/components/Image.jsx",["526","527","528"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, FormGroup, Label, Row, Spinner } from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport { render } from \"@testing-library/react\";\n\nrequire(\"../../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPhoto();\n  }, []);\n\n  const getPhoto = () => {\n    API.get(`project/${id}/project-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        let length = result.data.length >= 3 ? result.data.length : 3;\n        for (let i = 0; i < length; i++) {\n          if (result.data[i]) {\n            photo.push({\n              id: result.data[i].id.toString(),\n              photo_name: `${API.urlStorage}${result.data[i].photo_name}`,\n            });\n          } else {\n            photo.push({\n              id: `x${i}`,\n              photo_name: \"\",\n            });\n          }\n        }\n        setDataFile(photo);\n      }\n    });\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n  };\n\n  const uploadImage = async () => {\n    setIsLoading(true);\n    for (let i = 0; i < files.length; i++) {\n      let payload = new FormData();\n      payload.append(\"photo\", files[i].photo_name);\n      if (files[i].id.indexOf(\"x\") > -1) {\n        await API.uploadFile(\n          `project/${id}/store-project-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      } else {\n        await API.uploadFile(\n          `project/${files[i].id}/update-project-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const deleteImage = (id) => {\n    if (id.indexOf(\"x\") > -1) {\n      const items = files.filter((item) => item.id !== id);\n      setFiles(items);\n\n      var idxDataFile = dataFile.findIndex((x) => x.id === id);\n      let updateValue = dataFile[idxDataFile];\n      updateValue[\"photo_name\"] = \"\";\n\n      setDataFile([\n        ...dataFile.slice(0, idxDataFile),\n        updateValue,\n        ...dataFile.slice(idxDataFile + 1),\n      ]);\n    } else {\n      let resp = API.deleteData(`project/${id}/delete-project-photo`);\n      getPhoto();\n      handleMessage(resp);\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Project Photo</Label>\n          <Col sm={10}>\n            <Row className=\"d-flex align-items-end\">\n              {/* {renderImage} */}\n              {dataFile.map((item) => (\n                <Col sm={4}>\n                  <div>\n                    <img\n                      className=\"img-preview mb-2\"\n                      src={`${item.photo_name}`}\n                      alt=\"\"\n                    />\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"mr-2\" style={styles}>\n                        <label className=\"custom-file-upload w-100\">\n                          <input\n                            type=\"file\"\n                            id=\"file1\"\n                            onChange={(e) => onChangeFiles(e, item.id)}\n                            accept=\"image/*\"\n                          />\n                          {item.photo_name ? <>Edit</> : <>Add</>}\n                        </label>\n                      </div>\n                      {item.photo_name && (\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-danger text-white\"\n                          onClick={() => deleteImage(item.id)}\n                        >\n                          Remove\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={uploadImage}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/components/Data.jsx",["529","530","531","532"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Spinner,\n} from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport makeAnimated from \"react-select/animated\";\nimport Select from \"react-select\";\nimport TextEditorTwo from \"../../../../shared/components/text-editor/TextEditor\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const animatedComponents = makeAnimated();\n  const [listCategory, setListCategory] = useState([]);\n  const [listType, setListType] = useState([]);\n  const [category, setCategory] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const { id } = useParams();\n\n  useEffect(() => {\n    API.get(`product-category/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.category_name,\n          })\n        );\n        setListCategory(list);\n      }\n    });\n    API.get(`product-type/list`).then((result) => {\n      if (result.message === \"success\") {\n        let list = [];\n        result.data.map((item) =>\n          list.push({\n            value: item.id,\n            label: item.type_name,\n          })\n        );\n        setListType(list);\n      }\n    });\n    API.get(`product/${id}`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data[0]);\n      }\n    });\n    console.log(data);\n  }, []);\n\n  const makePayload = () => {\n    let cat = [];\n    category.map((item) => cat.push(item.value));\n    let payload = JSON.stringify({\n      product_type_id: data.type_id,\n      product_name: data.product_name,\n      description: data.description,\n      share_count: data.share_count,\n      seen_count: data.seen_count,\n      product_category_id: cat,\n      is_active: 1,\n    });\n\n    setIsLoading(true);\n    save(payload);\n  };\n\n  const save = async (payload) => {\n    let resp = await API.put(`product/${id}/update`, payload);\n    handleMessage(resp);\n  };\n\n  const handleMessage = (resp) => {\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Added\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Product Name</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Product's Name\"\n              type=\"text\"\n              value={data?.product_name}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Description</Label>\n          <Col sm={10}>\n            <TextEditorTwo\n              onChange={(val) => setData({ ...data, description: val })}\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Type</Label>\n          <Col sm={10}>\n            <Input\n              name=\"select\"\n              type=\"select\"\n              value={data.type_id}\n              onChange={(e) => setData({ ...data, type_id: e.target.value })}\n            >\n              <option value={0}>Select</option>\n              {listType.map((item) => (\n                <option value={item.value}>{item.label}</option>\n              ))}\n            </Input>\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Category Product</Label>\n          <Col sm={10}>\n            <Select\n              defaultValue={[listCategory[0], listCategory[1]]}\n              isMulti\n              closeMenuOnSelect={false}\n              components={animatedComponents}\n              onChange={(e) => setCategory(e)}\n              options={listCategory}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Share Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Share Count\"\n              type=\"text\"\n              value={data?.share_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup row>\n          <Label sm={2}>Seen Count</Label>\n          <Col sm={10}>\n            <Input\n              name=\"text\"\n              placeholder=\"Input the Seen Count\"\n              type=\"text\"\n              value={data?.seen_count}\n              onChange={(e) =>\n                setData({ ...data, product_name: e.target.value })\n              }\n            />\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={makePayload}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Product/edit/components/Image.jsx",["533","534","535"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Form, FormGroup, Label, Row, Spinner } from \"reactstrap\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\nimport { useParams } from \"react-router\";\nimport { render } from \"@testing-library/react\";\n\nrequire(\"../../../../public/styles.css\");\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\",\n};\n\nfunction Index() {\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    status: \"\",\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [dataFile, setDataFile] = useState([]);\n  const [files, setFiles] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getPhoto();\n  }, []);\n\n  const getPhoto = () => {\n    API.get(`product/${id}/product-photo-list`).then((result) => {\n      if (result.message === \"success\") {\n        let photo = [];\n        let length = result.data.length >= 5 ? result.data.length : 5;\n        for (let i = 0; i < length; i++) {\n          if (result.data[i]) {\n            photo.push({\n              id: result.data[i].id.toString(),\n              photo_name: `${API.urlStorage}${result.data[i].photo_name}`,\n            });\n          } else {\n            photo.push({\n              id: `x${i}`,\n              photo_name: \"\",\n            });\n          }\n        }\n        setDataFile(photo);\n      }\n    });\n  };\n\n  const handleMessage = (resp) => {\n    console.log(resp);\n    if (resp.message === \"success\") {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: \"Data was Updated\",\n        status: \"success\",\n      });\n    } else {\n      setIsLoading(false);\n      setAlert({\n        open: true,\n        message: resp.message,\n        status: \"error\",\n      });\n    }\n  };\n\n  const onChangeFiles = (e, id) => {\n    var idx = files.findIndex((x) => x.id === id);\n    if (idx > -1) {\n      let updateValue = files[idx];\n      updateValue[\"photo_name\"] = e.target.files[0];\n\n      setFiles([...files.slice(0, idx), updateValue, ...files.slice(idx + 1)]);\n    } else {\n      let file = {\n        id: id,\n        photo_name: e.target.files[0],\n      };\n      setFiles([...files, file]);\n    }\n\n    idx = dataFile.findIndex((x) => x.id === id);\n    let updateValue = dataFile[idx];\n    updateValue[\"photo_name\"] = URL.createObjectURL(e.target.files[0]);\n\n    setDataFile([\n      ...dataFile.slice(0, idx),\n      updateValue,\n      ...dataFile.slice(idx + 1),\n    ]);\n\n    console.log(files);\n  };\n\n  const uploadImage = async () => {\n    setIsLoading(true);\n    for (let i = 0; i < files.length; i++) {\n      let payload = new FormData();\n      payload.append(\"photo\", files[i].photo_name);\n      if (files[i].id.indexOf(\"x\") > -1) {\n        await API.uploadFile(\n          `product/${id}/store-product-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      } else {\n        await API.uploadFile(\n          `product/${files[i].id}/update-product-photo`,\n          payload,\n          \"POST\"\n        ).then((result) => handleMessage(result));\n      }\n    }\n    setIsLoading(false);\n  };\n\n  const deleteImage = (id) => {\n    if (id.indexOf(\"x\") > -1) {\n      const items = files.filter((item) => item.id !== id);\n      setFiles(items);\n\n      var idxDataFile = dataFile.findIndex((x) => x.id === id);\n      let updateValue = dataFile[idxDataFile];\n      updateValue[\"photo_name\"] = \"\";\n\n      setDataFile([\n        ...dataFile.slice(0, idxDataFile),\n        updateValue,\n        ...dataFile.slice(idxDataFile + 1),\n      ]);\n    } else {\n      let resp = API.deleteData(`product/${id}/delete-product-photo`);\n      handleMessage(resp);\n      getPhoto();\n    }\n  };\n\n  const form = (\n    <Col md={12}>\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ ...alert, open: false })}\n        status={alert.status}\n      />\n      <Form id=\"form\" className=\"mt-3\">\n        <FormGroup row>\n          <Label sm={2}>Product Photo</Label>\n          <Col sm={10}>\n            <Row className=\"d-flex align-items-end\">\n              {/* {renderImage} */}\n              {dataFile.map((item) => (\n                <Col sm={4}>\n                  <div>\n                    <img\n                      className=\"img-preview mb-2\"\n                      src={`${item.photo_name}`}\n                      alt=\"\"\n                    />\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"mr-2\" style={styles}>\n                        <label className=\"custom-file-upload w-100\">\n                          <input\n                            type=\"file\"\n                            id=\"file1\"\n                            onChange={(e) => onChangeFiles(e, item.id)}\n                            accept=\"image/*\"\n                          />\n                          {item.photo_name ? <>Edit</> : <>Add</>}\n                        </label>\n                      </div>\n                      {item.photo_name && (\n                        <a\n                          href=\"#\"\n                          className=\"btn btn-danger text-white\"\n                          onClick={() => deleteImage(item.id)}\n                        >\n                          Remove\n                        </a>\n                      )}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n            </Row>\n          </Col>\n        </FormGroup>\n      </Form>\n      <FormGroup row>\n        <Col\n          sm={{\n            offset: 2,\n            size: 10,\n          }}\n        >\n          <Button\n            className=\"btn btn-primary text-white\"\n            onClick={uploadImage}\n            disabled={isLoading}\n          >\n            Save\n            {isLoading && (\n              <>\n                &nbsp; <Spinner size=\"sm\" />{\" \"}\n              </>\n            )}\n          </Button>\n        </Col>\n      </FormGroup>\n    </Col>\n  );\n\n  return form;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Chat/list/Index.jsx",["536","537","538"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Row, Spinner } from \"reactstrap\";\nimport DataTable from \"react-data-table-component\";\nimport { NavLink } from \"react-router-dom\";\nimport ModalDelete from \"./modal/delete\";\nimport API from \"../../../../services\";\nimport SnackbarComponent from \"../../../Layout/components/SnackbarComponent\";\n\nfunction Index() {\n  const [alert, setAlert] = useState({ open: false, message: \"\", status: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(\"\");\n  const [deleteData, setDeleteData] = useState({ open: false, data: \"\" });\n\n  useEffect(() => {\n    setIsLoading(true);\n    API.get(`email/message`).then((result) => {\n      if (result.message === \"success\") {\n        setData(result.data);\n        setIsLoading(false);\n      }\n    });\n  }, [alert]);\n\n  const deleteProject = () => {\n    API.deleteData(`email/${deleteData.data.id}/delete`).then((result) => {\n      if (result.message === \"success\") {\n        setAlert({\n          open: true,\n          message: `${deleteData.data.email_address} was deleted`,\n          status: \"success\",\n        });\n        setDeleteData({ open: false });\n      }\n    });\n  };\n\n  const cols = [\n    {\n      name: \"No\",\n      width: \"55px\",\n      cell: (row, index) => index + 1,\n    },\n    {\n      name: \"Email Address\",\n      cell: (row) => row.email_address,\n    },\n    {\n      name: \"\",\n      width: \"150px\",\n      cell: (row) => (\n        <>\n          <a\n            href=\"#\"\n            className=\"btn-sm btn-danger mr-1\"\n            onClick={() => setDeleteData({ open: true, data: row })}\n          >\n            Delete\n          </a>\n        </>\n      ),\n    },\n  ];\n\n  const List = (\n    <Col md={12}>\n      <ModalDelete\n        open={deleteData.open}\n        onHide={() => setDeleteData({ open: false })}\n        data={deleteData.data}\n        onDeleted={deleteProject}\n      />\n      <SnackbarComponent\n        openAlert={alert.open}\n        message={alert.message}\n        onHide={() => setAlert({ open: false })}\n      />\n      <Card>\n        <CardBody>\n          <Row>\n            <Col>\n              <div className=\"card__title\">\n                <h5 className=\"bold-text\">List Data</h5>\n                <h5 className=\"subhead\">Example subhead</h5>\n              </div>\n            </Col>\n          </Row>\n          <DataTable\n            columns={cols}\n            data={data}\n            pagination\n            paginationTotalRows={data.length}\n            paginationPerPage={10}\n            highlightOnHover\n            progressPending={isLoading}\n            paginationComponentOptions={{\n              noRowsPerPage: true,\n            }}\n            progressComponent={\n              <div className=\"text-center p-5\">\n                <p>Memuat Data</p>\n                <Spinner animation=\"border\" size=\"lg\" />\n              </div>\n            }\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n\n  return List;\n}\n\nexport default Index;\n","/Users/mznaufalmaulana/Projects/yonny-admin/src/containers/Email/Chat/list/modal/delete.jsx",[],{"ruleId":"539","replacedBy":"540"},{"ruleId":"541","replacedBy":"542"},{"ruleId":"543","severity":1,"message":"544","line":2,"column":10,"nodeType":"545","messageId":"546","endLine":2,"endColumn":14},{"ruleId":"543","severity":1,"message":"547","line":3,"column":8,"nodeType":"545","messageId":"546","endLine":3,"endColumn":20},{"ruleId":"543","severity":1,"message":"548","line":4,"column":8,"nodeType":"545","messageId":"546","endLine":4,"endColumn":22},{"ruleId":"543","severity":1,"message":"549","line":3,"column":16,"nodeType":"545","messageId":"546","endLine":3,"endColumn":24},{"ruleId":"543","severity":1,"message":"550","line":8,"column":8,"nodeType":"545","messageId":"546","endLine":8,"endColumn":27},{"ruleId":"543","severity":1,"message":"551","line":11,"column":8,"nodeType":"545","messageId":"546","endLine":11,"endColumn":16},{"ruleId":"539","replacedBy":"552"},{"ruleId":"541","replacedBy":"553"},{"ruleId":"554","severity":1,"message":"555","line":8,"column":6,"nodeType":"556","endLine":8,"endColumn":13,"suggestions":"557"},{"ruleId":"554","severity":1,"message":"555","line":11,"column":6,"nodeType":"556","endLine":11,"endColumn":13,"suggestions":"558"},{"ruleId":"543","severity":1,"message":"559","line":2,"column":36,"nodeType":"545","messageId":"546","endLine":2,"endColumn":41},{"ruleId":"554","severity":1,"message":"555","line":14,"column":6,"nodeType":"556","endLine":14,"endColumn":13,"suggestions":"560"},{"ruleId":"561","severity":1,"message":"562","line":73,"column":11,"nodeType":"563","endLine":77,"endColumn":12},{"ruleId":"543","severity":1,"message":"564","line":67,"column":9,"nodeType":"545","messageId":"546","endLine":67,"endColumn":13},{"ruleId":"561","severity":1,"message":"562","line":65,"column":11,"nodeType":"563","endLine":69,"endColumn":12},{"ruleId":"565","severity":1,"message":"566","line":68,"column":53,"nodeType":"567","messageId":"568","endLine":68,"endColumn":54},{"ruleId":"543","severity":1,"message":"569","line":16,"column":8,"nodeType":"545","messageId":"546","endLine":16,"endColumn":22},{"ruleId":"543","severity":1,"message":"570","line":17,"column":8,"nodeType":"545","messageId":"546","endLine":17,"endColumn":23},{"ruleId":"543","severity":1,"message":"571","line":29,"column":12,"nodeType":"545","messageId":"546","endLine":29,"endColumn":34},{"ruleId":"543","severity":1,"message":"572","line":33,"column":12,"nodeType":"545","messageId":"546","endLine":33,"endColumn":28},{"ruleId":"554","severity":1,"message":"573","line":64,"column":6,"nodeType":"556","endLine":64,"endColumn":8,"suggestions":"574"},{"ruleId":"543","severity":1,"message":"569","line":16,"column":8,"nodeType":"545","messageId":"546","endLine":16,"endColumn":22},{"ruleId":"543","severity":1,"message":"575","line":26,"column":12,"nodeType":"545","messageId":"546","endLine":26,"endColumn":24},{"ruleId":"554","severity":1,"message":"573","line":53,"column":6,"nodeType":"556","endLine":53,"endColumn":8,"suggestions":"576"},{"ruleId":"561","severity":1,"message":"562","line":61,"column":11,"nodeType":"563","endLine":65,"endColumn":12},{"ruleId":"565","severity":1,"message":"566","line":64,"column":53,"nodeType":"567","messageId":"568","endLine":64,"endColumn":54},{"ruleId":"554","severity":1,"message":"577","line":7,"column":47,"nodeType":"556","endLine":7,"endColumn":49,"suggestions":"578"},{"ruleId":"543","severity":1,"message":"579","line":3,"column":3,"nodeType":"545","messageId":"546","endLine":3,"endColumn":9},{"ruleId":"543","severity":1,"message":"580","line":7,"column":3,"nodeType":"545","messageId":"546","endLine":7,"endColumn":7},{"ruleId":"543","severity":1,"message":"581","line":8,"column":3,"nodeType":"545","messageId":"546","endLine":8,"endColumn":12},{"ruleId":"543","severity":1,"message":"559","line":9,"column":3,"nodeType":"545","messageId":"546","endLine":9,"endColumn":8},{"ruleId":"543","severity":1,"message":"582","line":10,"column":3,"nodeType":"545","messageId":"546","endLine":10,"endColumn":8},{"ruleId":"543","severity":1,"message":"583","line":15,"column":3,"nodeType":"545","messageId":"546","endLine":15,"endColumn":10},{"ruleId":"543","severity":1,"message":"584","line":23,"column":8,"nodeType":"545","messageId":"546","endLine":23,"endColumn":14},{"ruleId":"543","severity":1,"message":"585","line":24,"column":8,"nodeType":"545","messageId":"546","endLine":24,"endColumn":21},{"ruleId":"543","severity":1,"message":"586","line":35,"column":9,"nodeType":"545","messageId":"546","endLine":35,"endColumn":27},{"ruleId":"543","severity":1,"message":"587","line":36,"column":10,"nodeType":"545","messageId":"546","endLine":36,"endColumn":22},{"ruleId":"543","severity":1,"message":"588","line":37,"column":10,"nodeType":"545","messageId":"546","endLine":37,"endColumn":18},{"ruleId":"543","severity":1,"message":"589","line":38,"column":20,"nodeType":"545","messageId":"546","endLine":38,"endColumn":31},{"ruleId":"543","severity":1,"message":"590","line":39,"column":10,"nodeType":"545","messageId":"546","endLine":39,"endColumn":19},{"ruleId":"554","severity":1,"message":"591","line":80,"column":6,"nodeType":"556","endLine":80,"endColumn":8,"suggestions":"592"},{"ruleId":"543","severity":1,"message":"593","line":82,"column":9,"nodeType":"545","messageId":"546","endLine":82,"endColumn":20},{"ruleId":"561","severity":1,"message":"562","line":60,"column":11,"nodeType":"563","endLine":64,"endColumn":12},{"ruleId":"543","severity":1,"message":"594","line":1,"column":27,"nodeType":"545","messageId":"546","endLine":1,"endColumn":36},{"ruleId":"543","severity":1,"message":"595","line":13,"column":8,"nodeType":"545","messageId":"546","endLine":13,"endColumn":31},{"ruleId":"543","severity":1,"message":"570","line":16,"column":8,"nodeType":"545","messageId":"546","endLine":16,"endColumn":23},{"ruleId":"543","severity":1,"message":"596","line":19,"column":8,"nodeType":"545","messageId":"546","endLine":19,"endColumn":13},{"ruleId":"543","severity":1,"message":"597","line":20,"column":8,"nodeType":"545","messageId":"546","endLine":20,"endColumn":18},{"ruleId":"543","severity":1,"message":"579","line":3,"column":3,"nodeType":"545","messageId":"546","endLine":3,"endColumn":9},{"ruleId":"543","severity":1,"message":"580","line":7,"column":3,"nodeType":"545","messageId":"546","endLine":7,"endColumn":7},{"ruleId":"543","severity":1,"message":"581","line":8,"column":3,"nodeType":"545","messageId":"546","endLine":8,"endColumn":12},{"ruleId":"543","severity":1,"message":"582","line":9,"column":3,"nodeType":"545","messageId":"546","endLine":9,"endColumn":8},{"ruleId":"543","severity":1,"message":"583","line":14,"column":3,"nodeType":"545","messageId":"546","endLine":14,"endColumn":10},{"ruleId":"543","severity":1,"message":"585","line":21,"column":8,"nodeType":"545","messageId":"546","endLine":21,"endColumn":21},{"ruleId":"543","severity":1,"message":"598","line":27,"column":7,"nodeType":"545","messageId":"546","endLine":27,"endColumn":13},{"ruleId":"543","severity":1,"message":"590","line":38,"column":10,"nodeType":"545","messageId":"546","endLine":38,"endColumn":19},{"ruleId":"554","severity":1,"message":"599","line":69,"column":6,"nodeType":"556","endLine":69,"endColumn":8,"suggestions":"600"},{"ruleId":"543","severity":1,"message":"593","line":71,"column":9,"nodeType":"545","messageId":"546","endLine":71,"endColumn":20},{"ruleId":"543","severity":1,"message":"601","line":108,"column":9,"nodeType":"545","messageId":"546","endLine":108,"endColumn":22},{"ruleId":"543","severity":1,"message":"602","line":136,"column":9,"nodeType":"545","messageId":"546","endLine":136,"endColumn":20},{"ruleId":"543","severity":1,"message":"603","line":22,"column":10,"nodeType":"545","messageId":"546","endLine":22,"endColumn":17},{"ruleId":"543","severity":1,"message":"604","line":22,"column":19,"nodeType":"545","messageId":"546","endLine":22,"endColumn":29},{"ruleId":"554","severity":1,"message":"573","line":50,"column":6,"nodeType":"556","endLine":50,"endColumn":8,"suggestions":"605"},{"ruleId":"561","severity":1,"message":"562","line":60,"column":11,"nodeType":"563","endLine":64,"endColumn":12},{"ruleId":"561","severity":1,"message":"562","line":66,"column":11,"nodeType":"563","endLine":70,"endColumn":12},{"ruleId":"554","severity":1,"message":"573","line":63,"column":6,"nodeType":"556","endLine":63,"endColumn":8,"suggestions":"606"},{"ruleId":"543","severity":1,"message":"559","line":9,"column":3,"nodeType":"545","messageId":"546","endLine":9,"endColumn":8},{"ruleId":"543","severity":1,"message":"582","line":10,"column":3,"nodeType":"545","messageId":"546","endLine":10,"endColumn":8},{"ruleId":"554","severity":1,"message":"607","line":42,"column":6,"nodeType":"556","endLine":42,"endColumn":8,"suggestions":"608"},{"ruleId":"554","severity":1,"message":"607","line":46,"column":6,"nodeType":"556","endLine":46,"endColumn":8,"suggestions":"609"},{"ruleId":"554","severity":1,"message":"573","line":86,"column":6,"nodeType":"556","endLine":86,"endColumn":8,"suggestions":"610"},{"ruleId":"561","severity":1,"message":"562","line":72,"column":11,"nodeType":"563","endLine":76,"endColumn":12},{"ruleId":"543","severity":1,"message":"549","line":3,"column":16,"nodeType":"545","messageId":"546","endLine":3,"endColumn":24},{"ruleId":"543","severity":1,"message":"611","line":5,"column":8,"nodeType":"545","messageId":"546","endLine":5,"endColumn":15},{"ruleId":"543","severity":1,"message":"550","line":9,"column":8,"nodeType":"545","messageId":"546","endLine":9,"endColumn":27},{"ruleId":"543","severity":1,"message":"612","line":23,"column":9,"nodeType":"545","messageId":"546","endLine":23,"endColumn":21},{"ruleId":"543","severity":1,"message":"613","line":3,"column":10,"nodeType":"545","messageId":"546","endLine":3,"endColumn":13},{"ruleId":"543","severity":1,"message":"614","line":3,"column":15,"nodeType":"545","messageId":"546","endLine":3,"endColumn":18},{"ruleId":"561","severity":1,"message":"562","line":66,"column":11,"nodeType":"563","endLine":70,"endColumn":12},{"ruleId":"543","severity":1,"message":"615","line":14,"column":8,"nodeType":"545","messageId":"546","endLine":14,"endColumn":26},{"ruleId":"543","severity":1,"message":"594","line":1,"column":27,"nodeType":"545","messageId":"546","endLine":1,"endColumn":36},{"ruleId":"554","severity":1,"message":"591","line":41,"column":6,"nodeType":"556","endLine":41,"endColumn":8,"suggestions":"616"},{"ruleId":"561","severity":1,"message":"562","line":73,"column":11,"nodeType":"563","endLine":77,"endColumn":12},{"ruleId":"554","severity":1,"message":"573","line":32,"column":6,"nodeType":"556","endLine":32,"endColumn":8,"suggestions":"617"},{"ruleId":"543","severity":1,"message":"618","line":6,"column":10,"nodeType":"545","messageId":"546","endLine":6,"endColumn":16},{"ruleId":"554","severity":1,"message":"619","line":27,"column":6,"nodeType":"556","endLine":27,"endColumn":8,"suggestions":"620"},{"ruleId":"561","severity":1,"message":"562","line":174,"column":25,"nodeType":"563","endLine":178,"endColumn":26},{"ruleId":"543","severity":1,"message":"621","line":4,"column":3,"nodeType":"545","messageId":"546","endLine":4,"endColumn":7},{"ruleId":"543","severity":1,"message":"622","line":5,"column":3,"nodeType":"545","messageId":"546","endLine":5,"endColumn":11},{"ruleId":"543","severity":1,"message":"614","line":11,"column":3,"nodeType":"545","messageId":"546","endLine":11,"endColumn":6},{"ruleId":"554","severity":1,"message":"591","line":66,"column":6,"nodeType":"556","endLine":66,"endColumn":8,"suggestions":"623"},{"ruleId":"543","severity":1,"message":"618","line":6,"column":10,"nodeType":"545","messageId":"546","endLine":6,"endColumn":16},{"ruleId":"554","severity":1,"message":"619","line":27,"column":6,"nodeType":"556","endLine":27,"endColumn":8,"suggestions":"624"},{"ruleId":"561","severity":1,"message":"562","line":177,"column":25,"nodeType":"563","endLine":181,"endColumn":26},{"ruleId":"543","severity":1,"message":"579","line":2,"column":10,"nodeType":"545","messageId":"546","endLine":2,"endColumn":16},{"ruleId":"543","severity":1,"message":"625","line":4,"column":10,"nodeType":"545","messageId":"546","endLine":4,"endColumn":17},{"ruleId":"561","severity":1,"message":"562","line":53,"column":11,"nodeType":"563","endLine":57,"endColumn":12},"no-native-reassign",["626"],"no-negated-in-lhs",["627"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'FacebookIcon' is defined but never used.","'GooglePlusIcon' is defined but never used.","'Redirect' is defined but never used.","'renderCheckBoxField' is defined but never used.","'MuiAlert' is defined but never used.",["626"],["627"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["628"],["629"],"'Input' is defined but never used.",["630"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'file' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'InputComponent' is defined but never used.","'SelectComponent' is defined but never used.","'onChangeCategoryParent' is defined but never used.","'onChangeCategory' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["631"],"'onChangeType' is defined but never used.",["632"],"React Hook useEffect has missing dependencies: 'props' and 'value'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["633"],"'Button' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Spinner' is defined but never used.","'Select' is defined but never used.","'TextEditorTwo' is defined but never used.","'animatedComponents' is assigned a value but never used.","'listCategory' is assigned a value but never used.","'listType' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'id'. Either include them or remove the dependency array.",["634"],"'makePayload' is assigned a value but never used.","'useEffect' is defined but never used.","'MultipleSelectComponent' is defined but never used.","'axios' is defined but never used.","'FileBase64' is defined but never used.","'styles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataFile' and 'id'. Either include them or remove the dependency array.",["635"],"'onChangeFiles' is assigned a value but never used.","'uploadImage' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.",["636"],["637"],"React Hook useEffect has a missing dependency: 'listRegion'. Either include it or remove the dependency array.",["638"],["639"],["640"],"'EyeIcon' is defined but never used.","'showPassword' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'InputFileComponent' is defined but never used.",["641"],["642"],"'render' is defined but never used.","React Hook useEffect has a missing dependency: 'getPhoto'. Either include it or remove the dependency array.",["643"],"'Card' is defined but never used.","'CardBody' is defined but never used.",["644"],["645"],"'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"646","fix":"647"},{"desc":"646","fix":"648"},{"desc":"646","fix":"649"},{"desc":"650","fix":"651"},{"desc":"650","fix":"652"},{"desc":"646","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"650","fix":"658"},{"desc":"650","fix":"659"},{"desc":"660","fix":"661"},{"desc":"660","fix":"662"},{"desc":"650","fix":"663"},{"desc":"654","fix":"664"},{"desc":"650","fix":"665"},{"desc":"666","fix":"667"},{"desc":"654","fix":"668"},{"desc":"666","fix":"669"},"Update the dependencies array to be: [props, value]",{"range":"670","text":"671"},{"range":"672","text":"671"},{"range":"673","text":"671"},"Update the dependencies array to be: [id]",{"range":"674","text":"675"},{"range":"676","text":"675"},{"range":"677","text":"671"},"Update the dependencies array to be: [data, id]",{"range":"678","text":"679"},"Update the dependencies array to be: [dataFile, id]",{"range":"680","text":"681"},{"range":"682","text":"675"},{"range":"683","text":"675"},"Update the dependencies array to be: [listRegion]",{"range":"684","text":"685"},{"range":"686","text":"685"},{"range":"687","text":"675"},{"range":"688","text":"679"},{"range":"689","text":"675"},"Update the dependencies array to be: [getPhoto]",{"range":"690","text":"691"},{"range":"692","text":"679"},{"range":"693","text":"691"},[244,251],"[props, value]",[375,382],[369,376],[1752,1754],"[id]",[1343,1345],[308,310],[2106,2108],"[data, id]",[1750,1752],"[dataFile, id]",[1316,1318],[1489,1491],[1158,1160],"[listRegion]",[1104,1106],[2127,2129],[927,929],[794,796],[785,787],"[getPhoto]",[1744,1746],[785,787]]